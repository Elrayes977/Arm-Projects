
Debug_Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012a4  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b0  080013d4  080013d4  000113d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001484  08001484  00020090  2**0
                  CONTENTS
  4 .ARM          00000000  08001484  08001484  00020090  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001484  08001484  00020090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001484  08001484  00011484  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001488  08001488  00011488  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000090  20000000  0800148c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000090  0800151c  00020090  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000c8  0800151c  000200c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 12 .debug_info   000024cc  00000000  00000000  000200b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000672  00000000  00000000  00022585  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000130  00000000  00000000  00022bf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f8  00000000  00000000  00022d28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002a8b  00000000  00000000  00022e20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013dd  00000000  00000000  000258ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009694  00000000  00000000  00026c88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0003031c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000be0  00000000  00000000  00030370  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000090 	.word	0x20000090
 800014c:	00000000 	.word	0x00000000
 8000150:	080013bc 	.word	0x080013bc

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000094 	.word	0x20000094
 800016c:	080013bc 	.word	0x080013bc

08000170 <main>:
void UpdateArray(int *ptr, int size);

int data = 20;

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	b084      	sub	sp, #16
 8000174:	af00      	add	r7, sp, #0
  	int arraySize = ARRAY_SIZE;
 8000176:	230a      	movs	r3, #10
 8000178:	60fb      	str	r3, [r7, #12]
	int a=5, b=8;
 800017a:	2305      	movs	r3, #5
 800017c:	60bb      	str	r3, [r7, #8]
 800017e:	2308      	movs	r3, #8
 8000180:	607b      	str	r3, [r7, #4]

	BubbleSort(array, arraySize);
 8000182:	68f9      	ldr	r1, [r7, #12]
 8000184:	480b      	ldr	r0, [pc, #44]	; (80001b4 <main+0x44>)
 8000186:	f000 f819 	bl	80001bc <BubbleSort>
	PrintArray(array, arraySize);
 800018a:	68f9      	ldr	r1, [r7, #12]
 800018c:	4809      	ldr	r0, [pc, #36]	; (80001b4 <main+0x44>)
 800018e:	f000 f85d 	bl	800024c <PrintArray>

	data++;
 8000192:	4b09      	ldr	r3, [pc, #36]	; (80001b8 <main+0x48>)
 8000194:	681b      	ldr	r3, [r3, #0]
 8000196:	3301      	adds	r3, #1
 8000198:	4a07      	ldr	r2, [pc, #28]	; (80001b8 <main+0x48>)
 800019a:	6013      	str	r3, [r2, #0]
	UpdateArray(array, arraySize);
 800019c:	68f9      	ldr	r1, [r7, #12]
 800019e:	4805      	ldr	r0, [pc, #20]	; (80001b4 <main+0x44>)
 80001a0:	f000 f890 	bl	80002c4 <UpdateArray>

 	Swap_Number(&a, &b);
 80001a4:	1d3a      	adds	r2, r7, #4
 80001a6:	f107 0308 	add.w	r3, r7, #8
 80001aa:	4611      	mov	r1, r2
 80001ac:	4618      	mov	r0, r3
 80001ae:	f000 f875 	bl	800029c <Swap_Number>

	while(1);
 80001b2:	e7fe      	b.n	80001b2 <main+0x42>
 80001b4:	20000000 	.word	0x20000000
 80001b8:	20000028 	.word	0x20000028

080001bc <BubbleSort>:
}



void BubbleSort(int *ptr, int size)
{
 80001bc:	b480      	push	{r7}
 80001be:	b087      	sub	sp, #28
 80001c0:	af00      	add	r7, sp, #0
 80001c2:	6078      	str	r0, [r7, #4]
 80001c4:	6039      	str	r1, [r7, #0]
	int temp;

	for(int i=0; i<size-1; i++)
 80001c6:	2300      	movs	r3, #0
 80001c8:	617b      	str	r3, [r7, #20]
 80001ca:	e034      	b.n	8000236 <BubbleSort+0x7a>
	{
		for(int j=0; j<size-i-1; j++)
 80001cc:	2300      	movs	r3, #0
 80001ce:	613b      	str	r3, [r7, #16]
 80001d0:	e027      	b.n	8000222 <BubbleSort+0x66>
		{
			if(ptr[j] > ptr[j+1])
 80001d2:	693b      	ldr	r3, [r7, #16]
 80001d4:	009b      	lsls	r3, r3, #2
 80001d6:	687a      	ldr	r2, [r7, #4]
 80001d8:	4413      	add	r3, r2
 80001da:	681a      	ldr	r2, [r3, #0]
 80001dc:	693b      	ldr	r3, [r7, #16]
 80001de:	3301      	adds	r3, #1
 80001e0:	009b      	lsls	r3, r3, #2
 80001e2:	6879      	ldr	r1, [r7, #4]
 80001e4:	440b      	add	r3, r1
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	429a      	cmp	r2, r3
 80001ea:	dd17      	ble.n	800021c <BubbleSort+0x60>
			{
				temp = ptr[j+1];
 80001ec:	693b      	ldr	r3, [r7, #16]
 80001ee:	3301      	adds	r3, #1
 80001f0:	009b      	lsls	r3, r3, #2
 80001f2:	687a      	ldr	r2, [r7, #4]
 80001f4:	4413      	add	r3, r2
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	60fb      	str	r3, [r7, #12]
				ptr[j+1] = ptr[j];
 80001fa:	693b      	ldr	r3, [r7, #16]
 80001fc:	009b      	lsls	r3, r3, #2
 80001fe:	687a      	ldr	r2, [r7, #4]
 8000200:	441a      	add	r2, r3
 8000202:	693b      	ldr	r3, [r7, #16]
 8000204:	3301      	adds	r3, #1
 8000206:	009b      	lsls	r3, r3, #2
 8000208:	6879      	ldr	r1, [r7, #4]
 800020a:	440b      	add	r3, r1
 800020c:	6812      	ldr	r2, [r2, #0]
 800020e:	601a      	str	r2, [r3, #0]
				ptr[j] = temp;
 8000210:	693b      	ldr	r3, [r7, #16]
 8000212:	009b      	lsls	r3, r3, #2
 8000214:	687a      	ldr	r2, [r7, #4]
 8000216:	4413      	add	r3, r2
 8000218:	68fa      	ldr	r2, [r7, #12]
 800021a:	601a      	str	r2, [r3, #0]
		for(int j=0; j<size-i-1; j++)
 800021c:	693b      	ldr	r3, [r7, #16]
 800021e:	3301      	adds	r3, #1
 8000220:	613b      	str	r3, [r7, #16]
 8000222:	683a      	ldr	r2, [r7, #0]
 8000224:	697b      	ldr	r3, [r7, #20]
 8000226:	1ad3      	subs	r3, r2, r3
 8000228:	3b01      	subs	r3, #1
 800022a:	693a      	ldr	r2, [r7, #16]
 800022c:	429a      	cmp	r2, r3
 800022e:	dbd0      	blt.n	80001d2 <BubbleSort+0x16>
	for(int i=0; i<size-1; i++)
 8000230:	697b      	ldr	r3, [r7, #20]
 8000232:	3301      	adds	r3, #1
 8000234:	617b      	str	r3, [r7, #20]
 8000236:	683b      	ldr	r3, [r7, #0]
 8000238:	3b01      	subs	r3, #1
 800023a:	697a      	ldr	r2, [r7, #20]
 800023c:	429a      	cmp	r2, r3
 800023e:	dbc5      	blt.n	80001cc <BubbleSort+0x10>
			}
		}
	}
}
 8000240:	bf00      	nop
 8000242:	bf00      	nop
 8000244:	371c      	adds	r7, #28
 8000246:	46bd      	mov	sp, r7
 8000248:	bc80      	pop	{r7}
 800024a:	4770      	bx	lr

0800024c <PrintArray>:

void PrintArray(int *ptr, int size)
{
 800024c:	b580      	push	{r7, lr}
 800024e:	b084      	sub	sp, #16
 8000250:	af00      	add	r7, sp, #0
 8000252:	6078      	str	r0, [r7, #4]
 8000254:	6039      	str	r1, [r7, #0]
	for(int i=0; i<size; i++)
 8000256:	2300      	movs	r3, #0
 8000258:	60fb      	str	r3, [r7, #12]
 800025a:	e010      	b.n	800027e <PrintArray+0x32>
	{

		printf("Element of [%d]: ", i+1);
 800025c:	68fb      	ldr	r3, [r7, #12]
 800025e:	3301      	adds	r3, #1
 8000260:	4619      	mov	r1, r3
 8000262:	480b      	ldr	r0, [pc, #44]	; (8000290 <PrintArray+0x44>)
 8000264:	f000 f94a 	bl	80004fc <iprintf>
		printf("%d\n",array[i]);
 8000268:	4a0a      	ldr	r2, [pc, #40]	; (8000294 <PrintArray+0x48>)
 800026a:	68fb      	ldr	r3, [r7, #12]
 800026c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000270:	4619      	mov	r1, r3
 8000272:	4809      	ldr	r0, [pc, #36]	; (8000298 <PrintArray+0x4c>)
 8000274:	f000 f942 	bl	80004fc <iprintf>
	for(int i=0; i<size; i++)
 8000278:	68fb      	ldr	r3, [r7, #12]
 800027a:	3301      	adds	r3, #1
 800027c:	60fb      	str	r3, [r7, #12]
 800027e:	68fa      	ldr	r2, [r7, #12]
 8000280:	683b      	ldr	r3, [r7, #0]
 8000282:	429a      	cmp	r2, r3
 8000284:	dbea      	blt.n	800025c <PrintArray+0x10>
	}

}
 8000286:	bf00      	nop
 8000288:	bf00      	nop
 800028a:	3710      	adds	r7, #16
 800028c:	46bd      	mov	sp, r7
 800028e:	bd80      	pop	{r7, pc}
 8000290:	080013d4 	.word	0x080013d4
 8000294:	20000000 	.word	0x20000000
 8000298:	080013e8 	.word	0x080013e8

0800029c <Swap_Number>:


void Swap_Number(int *x, int *y)
{
 800029c:	b480      	push	{r7}
 800029e:	b085      	sub	sp, #20
 80002a0:	af00      	add	r7, sp, #0
 80002a2:	6078      	str	r0, [r7, #4]
 80002a4:	6039      	str	r1, [r7, #0]
	int temp = *x;
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	60fb      	str	r3, [r7, #12]
	*x = *y;
 80002ac:	683b      	ldr	r3, [r7, #0]
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	601a      	str	r2, [r3, #0]
	*y = temp;
 80002b4:	683b      	ldr	r3, [r7, #0]
 80002b6:	68fa      	ldr	r2, [r7, #12]
 80002b8:	601a      	str	r2, [r3, #0]

}
 80002ba:	bf00      	nop
 80002bc:	3714      	adds	r7, #20
 80002be:	46bd      	mov	sp, r7
 80002c0:	bc80      	pop	{r7}
 80002c2:	4770      	bx	lr

080002c4 <UpdateArray>:


void UpdateArray(int *ptr, int size)
{
 80002c4:	b480      	push	{r7}
 80002c6:	b085      	sub	sp, #20
 80002c8:	af00      	add	r7, sp, #0
 80002ca:	6078      	str	r0, [r7, #4]
 80002cc:	6039      	str	r1, [r7, #0]
	for(int i=0; i<size; i++)
 80002ce:	2300      	movs	r3, #0
 80002d0:	60fb      	str	r3, [r7, #12]
 80002d2:	e00b      	b.n	80002ec <UpdateArray+0x28>
	{
		array[i] = array[i]+5;
 80002d4:	4a0a      	ldr	r2, [pc, #40]	; (8000300 <UpdateArray+0x3c>)
 80002d6:	68fb      	ldr	r3, [r7, #12]
 80002d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002dc:	1d5a      	adds	r2, r3, #5
 80002de:	4908      	ldr	r1, [pc, #32]	; (8000300 <UpdateArray+0x3c>)
 80002e0:	68fb      	ldr	r3, [r7, #12]
 80002e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for(int i=0; i<size; i++)
 80002e6:	68fb      	ldr	r3, [r7, #12]
 80002e8:	3301      	adds	r3, #1
 80002ea:	60fb      	str	r3, [r7, #12]
 80002ec:	68fa      	ldr	r2, [r7, #12]
 80002ee:	683b      	ldr	r3, [r7, #0]
 80002f0:	429a      	cmp	r2, r3
 80002f2:	dbef      	blt.n	80002d4 <UpdateArray+0x10>
	}

}
 80002f4:	bf00      	nop
 80002f6:	bf00      	nop
 80002f8:	3714      	adds	r7, #20
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bc80      	pop	{r7}
 80002fe:	4770      	bx	lr
 8000300:	20000000 	.word	0x20000000

08000304 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000304:	b580      	push	{r7, lr}
 8000306:	b086      	sub	sp, #24
 8000308:	af00      	add	r7, sp, #0
 800030a:	60f8      	str	r0, [r7, #12]
 800030c:	60b9      	str	r1, [r7, #8]
 800030e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000310:	2300      	movs	r3, #0
 8000312:	617b      	str	r3, [r7, #20]
 8000314:	e00a      	b.n	800032c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000316:	f3af 8000 	nop.w
 800031a:	4601      	mov	r1, r0
 800031c:	68bb      	ldr	r3, [r7, #8]
 800031e:	1c5a      	adds	r2, r3, #1
 8000320:	60ba      	str	r2, [r7, #8]
 8000322:	b2ca      	uxtb	r2, r1
 8000324:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000326:	697b      	ldr	r3, [r7, #20]
 8000328:	3301      	adds	r3, #1
 800032a:	617b      	str	r3, [r7, #20]
 800032c:	697a      	ldr	r2, [r7, #20]
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	429a      	cmp	r2, r3
 8000332:	dbf0      	blt.n	8000316 <_read+0x12>
	}

return len;
 8000334:	687b      	ldr	r3, [r7, #4]
}
 8000336:	4618      	mov	r0, r3
 8000338:	3718      	adds	r7, #24
 800033a:	46bd      	mov	sp, r7
 800033c:	bd80      	pop	{r7, pc}

0800033e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800033e:	b580      	push	{r7, lr}
 8000340:	b086      	sub	sp, #24
 8000342:	af00      	add	r7, sp, #0
 8000344:	60f8      	str	r0, [r7, #12]
 8000346:	60b9      	str	r1, [r7, #8]
 8000348:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034a:	2300      	movs	r3, #0
 800034c:	617b      	str	r3, [r7, #20]
 800034e:	e009      	b.n	8000364 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000350:	68bb      	ldr	r3, [r7, #8]
 8000352:	1c5a      	adds	r2, r3, #1
 8000354:	60ba      	str	r2, [r7, #8]
 8000356:	781b      	ldrb	r3, [r3, #0]
 8000358:	4618      	mov	r0, r3
 800035a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800035e:	697b      	ldr	r3, [r7, #20]
 8000360:	3301      	adds	r3, #1
 8000362:	617b      	str	r3, [r7, #20]
 8000364:	697a      	ldr	r2, [r7, #20]
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	429a      	cmp	r2, r3
 800036a:	dbf1      	blt.n	8000350 <_write+0x12>
	}
	return len;
 800036c:	687b      	ldr	r3, [r7, #4]
}
 800036e:	4618      	mov	r0, r3
 8000370:	3718      	adds	r7, #24
 8000372:	46bd      	mov	sp, r7
 8000374:	bd80      	pop	{r7, pc}

08000376 <_close>:

int _close(int file)
{
 8000376:	b480      	push	{r7}
 8000378:	b083      	sub	sp, #12
 800037a:	af00      	add	r7, sp, #0
 800037c:	6078      	str	r0, [r7, #4]
	return -1;
 800037e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000382:	4618      	mov	r0, r3
 8000384:	370c      	adds	r7, #12
 8000386:	46bd      	mov	sp, r7
 8000388:	bc80      	pop	{r7}
 800038a:	4770      	bx	lr

0800038c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800038c:	b480      	push	{r7}
 800038e:	b083      	sub	sp, #12
 8000390:	af00      	add	r7, sp, #0
 8000392:	6078      	str	r0, [r7, #4]
 8000394:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000396:	683b      	ldr	r3, [r7, #0]
 8000398:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800039c:	605a      	str	r2, [r3, #4]
	return 0;
 800039e:	2300      	movs	r3, #0
}
 80003a0:	4618      	mov	r0, r3
 80003a2:	370c      	adds	r7, #12
 80003a4:	46bd      	mov	sp, r7
 80003a6:	bc80      	pop	{r7}
 80003a8:	4770      	bx	lr

080003aa <_isatty>:

int _isatty(int file)
{
 80003aa:	b480      	push	{r7}
 80003ac:	b083      	sub	sp, #12
 80003ae:	af00      	add	r7, sp, #0
 80003b0:	6078      	str	r0, [r7, #4]
	return 1;
 80003b2:	2301      	movs	r3, #1
}
 80003b4:	4618      	mov	r0, r3
 80003b6:	370c      	adds	r7, #12
 80003b8:	46bd      	mov	sp, r7
 80003ba:	bc80      	pop	{r7}
 80003bc:	4770      	bx	lr

080003be <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003be:	b480      	push	{r7}
 80003c0:	b085      	sub	sp, #20
 80003c2:	af00      	add	r7, sp, #0
 80003c4:	60f8      	str	r0, [r7, #12]
 80003c6:	60b9      	str	r1, [r7, #8]
 80003c8:	607a      	str	r2, [r7, #4]
	return 0;
 80003ca:	2300      	movs	r3, #0
}
 80003cc:	4618      	mov	r0, r3
 80003ce:	3714      	adds	r7, #20
 80003d0:	46bd      	mov	sp, r7
 80003d2:	bc80      	pop	{r7}
 80003d4:	4770      	bx	lr
	...

080003d8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	b086      	sub	sp, #24
 80003dc:	af00      	add	r7, sp, #0
 80003de:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003e0:	4a14      	ldr	r2, [pc, #80]	; (8000434 <_sbrk+0x5c>)
 80003e2:	4b15      	ldr	r3, [pc, #84]	; (8000438 <_sbrk+0x60>)
 80003e4:	1ad3      	subs	r3, r2, r3
 80003e6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003e8:	697b      	ldr	r3, [r7, #20]
 80003ea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003ec:	4b13      	ldr	r3, [pc, #76]	; (800043c <_sbrk+0x64>)
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	2b00      	cmp	r3, #0
 80003f2:	d102      	bne.n	80003fa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003f4:	4b11      	ldr	r3, [pc, #68]	; (800043c <_sbrk+0x64>)
 80003f6:	4a12      	ldr	r2, [pc, #72]	; (8000440 <_sbrk+0x68>)
 80003f8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003fa:	4b10      	ldr	r3, [pc, #64]	; (800043c <_sbrk+0x64>)
 80003fc:	681a      	ldr	r2, [r3, #0]
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	4413      	add	r3, r2
 8000402:	693a      	ldr	r2, [r7, #16]
 8000404:	429a      	cmp	r2, r3
 8000406:	d207      	bcs.n	8000418 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000408:	f000 f846 	bl	8000498 <__errno>
 800040c:	4603      	mov	r3, r0
 800040e:	220c      	movs	r2, #12
 8000410:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000412:	f04f 33ff 	mov.w	r3, #4294967295
 8000416:	e009      	b.n	800042c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000418:	4b08      	ldr	r3, [pc, #32]	; (800043c <_sbrk+0x64>)
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800041e:	4b07      	ldr	r3, [pc, #28]	; (800043c <_sbrk+0x64>)
 8000420:	681a      	ldr	r2, [r3, #0]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4413      	add	r3, r2
 8000426:	4a05      	ldr	r2, [pc, #20]	; (800043c <_sbrk+0x64>)
 8000428:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800042a:	68fb      	ldr	r3, [r7, #12]
}
 800042c:	4618      	mov	r0, r3
 800042e:	3718      	adds	r7, #24
 8000430:	46bd      	mov	sp, r7
 8000432:	bd80      	pop	{r7, pc}
 8000434:	20005000 	.word	0x20005000
 8000438:	00000400 	.word	0x00000400
 800043c:	200000ac 	.word	0x200000ac
 8000440:	200000c8 	.word	0x200000c8

08000444 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000444:	480d      	ldr	r0, [pc, #52]	; (800047c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000446:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000448:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800044c:	480c      	ldr	r0, [pc, #48]	; (8000480 <LoopForever+0x6>)
  ldr r1, =_edata
 800044e:	490d      	ldr	r1, [pc, #52]	; (8000484 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000450:	4a0d      	ldr	r2, [pc, #52]	; (8000488 <LoopForever+0xe>)
  movs r3, #0
 8000452:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000454:	e002      	b.n	800045c <LoopCopyDataInit>

08000456 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000456:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000458:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800045a:	3304      	adds	r3, #4

0800045c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800045c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800045e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000460:	d3f9      	bcc.n	8000456 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000462:	4a0a      	ldr	r2, [pc, #40]	; (800048c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000464:	4c0a      	ldr	r4, [pc, #40]	; (8000490 <LoopForever+0x16>)
  movs r3, #0
 8000466:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000468:	e001      	b.n	800046e <LoopFillZerobss>

0800046a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800046a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800046c:	3204      	adds	r2, #4

0800046e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800046e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000470:	d3fb      	bcc.n	800046a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000472:	f000 f817 	bl	80004a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000476:	f7ff fe7b 	bl	8000170 <main>

0800047a <LoopForever>:

LoopForever:
    b LoopForever
 800047a:	e7fe      	b.n	800047a <LoopForever>
  ldr   r0, =_estack
 800047c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000480:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000484:	20000090 	.word	0x20000090
  ldr r2, =_sidata
 8000488:	0800148c 	.word	0x0800148c
  ldr r2, =_sbss
 800048c:	20000090 	.word	0x20000090
  ldr r4, =_ebss
 8000490:	200000c8 	.word	0x200000c8

08000494 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000494:	e7fe      	b.n	8000494 <ADC1_2_IRQHandler>
	...

08000498 <__errno>:
 8000498:	4b01      	ldr	r3, [pc, #4]	; (80004a0 <__errno+0x8>)
 800049a:	6818      	ldr	r0, [r3, #0]
 800049c:	4770      	bx	lr
 800049e:	bf00      	nop
 80004a0:	2000002c 	.word	0x2000002c

080004a4 <__libc_init_array>:
 80004a4:	b570      	push	{r4, r5, r6, lr}
 80004a6:	2600      	movs	r6, #0
 80004a8:	4d0c      	ldr	r5, [pc, #48]	; (80004dc <__libc_init_array+0x38>)
 80004aa:	4c0d      	ldr	r4, [pc, #52]	; (80004e0 <__libc_init_array+0x3c>)
 80004ac:	1b64      	subs	r4, r4, r5
 80004ae:	10a4      	asrs	r4, r4, #2
 80004b0:	42a6      	cmp	r6, r4
 80004b2:	d109      	bne.n	80004c8 <__libc_init_array+0x24>
 80004b4:	f000 ff82 	bl	80013bc <_init>
 80004b8:	2600      	movs	r6, #0
 80004ba:	4d0a      	ldr	r5, [pc, #40]	; (80004e4 <__libc_init_array+0x40>)
 80004bc:	4c0a      	ldr	r4, [pc, #40]	; (80004e8 <__libc_init_array+0x44>)
 80004be:	1b64      	subs	r4, r4, r5
 80004c0:	10a4      	asrs	r4, r4, #2
 80004c2:	42a6      	cmp	r6, r4
 80004c4:	d105      	bne.n	80004d2 <__libc_init_array+0x2e>
 80004c6:	bd70      	pop	{r4, r5, r6, pc}
 80004c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80004cc:	4798      	blx	r3
 80004ce:	3601      	adds	r6, #1
 80004d0:	e7ee      	b.n	80004b0 <__libc_init_array+0xc>
 80004d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80004d6:	4798      	blx	r3
 80004d8:	3601      	adds	r6, #1
 80004da:	e7f2      	b.n	80004c2 <__libc_init_array+0x1e>
 80004dc:	08001484 	.word	0x08001484
 80004e0:	08001484 	.word	0x08001484
 80004e4:	08001484 	.word	0x08001484
 80004e8:	08001488 	.word	0x08001488

080004ec <memset>:
 80004ec:	4603      	mov	r3, r0
 80004ee:	4402      	add	r2, r0
 80004f0:	4293      	cmp	r3, r2
 80004f2:	d100      	bne.n	80004f6 <memset+0xa>
 80004f4:	4770      	bx	lr
 80004f6:	f803 1b01 	strb.w	r1, [r3], #1
 80004fa:	e7f9      	b.n	80004f0 <memset+0x4>

080004fc <iprintf>:
 80004fc:	b40f      	push	{r0, r1, r2, r3}
 80004fe:	4b0a      	ldr	r3, [pc, #40]	; (8000528 <iprintf+0x2c>)
 8000500:	b513      	push	{r0, r1, r4, lr}
 8000502:	681c      	ldr	r4, [r3, #0]
 8000504:	b124      	cbz	r4, 8000510 <iprintf+0x14>
 8000506:	69a3      	ldr	r3, [r4, #24]
 8000508:	b913      	cbnz	r3, 8000510 <iprintf+0x14>
 800050a:	4620      	mov	r0, r4
 800050c:	f000 f866 	bl	80005dc <__sinit>
 8000510:	ab05      	add	r3, sp, #20
 8000512:	4620      	mov	r0, r4
 8000514:	9a04      	ldr	r2, [sp, #16]
 8000516:	68a1      	ldr	r1, [r4, #8]
 8000518:	9301      	str	r3, [sp, #4]
 800051a:	f000 f981 	bl	8000820 <_vfiprintf_r>
 800051e:	b002      	add	sp, #8
 8000520:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000524:	b004      	add	sp, #16
 8000526:	4770      	bx	lr
 8000528:	2000002c 	.word	0x2000002c

0800052c <std>:
 800052c:	2300      	movs	r3, #0
 800052e:	b510      	push	{r4, lr}
 8000530:	4604      	mov	r4, r0
 8000532:	e9c0 3300 	strd	r3, r3, [r0]
 8000536:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800053a:	6083      	str	r3, [r0, #8]
 800053c:	8181      	strh	r1, [r0, #12]
 800053e:	6643      	str	r3, [r0, #100]	; 0x64
 8000540:	81c2      	strh	r2, [r0, #14]
 8000542:	6183      	str	r3, [r0, #24]
 8000544:	4619      	mov	r1, r3
 8000546:	2208      	movs	r2, #8
 8000548:	305c      	adds	r0, #92	; 0x5c
 800054a:	f7ff ffcf 	bl	80004ec <memset>
 800054e:	4b05      	ldr	r3, [pc, #20]	; (8000564 <std+0x38>)
 8000550:	6224      	str	r4, [r4, #32]
 8000552:	6263      	str	r3, [r4, #36]	; 0x24
 8000554:	4b04      	ldr	r3, [pc, #16]	; (8000568 <std+0x3c>)
 8000556:	62a3      	str	r3, [r4, #40]	; 0x28
 8000558:	4b04      	ldr	r3, [pc, #16]	; (800056c <std+0x40>)
 800055a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800055c:	4b04      	ldr	r3, [pc, #16]	; (8000570 <std+0x44>)
 800055e:	6323      	str	r3, [r4, #48]	; 0x30
 8000560:	bd10      	pop	{r4, pc}
 8000562:	bf00      	nop
 8000564:	08000dcd 	.word	0x08000dcd
 8000568:	08000def 	.word	0x08000def
 800056c:	08000e27 	.word	0x08000e27
 8000570:	08000e4b 	.word	0x08000e4b

08000574 <_cleanup_r>:
 8000574:	4901      	ldr	r1, [pc, #4]	; (800057c <_cleanup_r+0x8>)
 8000576:	f000 b8af 	b.w	80006d8 <_fwalk_reent>
 800057a:	bf00      	nop
 800057c:	08001125 	.word	0x08001125

08000580 <__sfmoreglue>:
 8000580:	b570      	push	{r4, r5, r6, lr}
 8000582:	2568      	movs	r5, #104	; 0x68
 8000584:	1e4a      	subs	r2, r1, #1
 8000586:	4355      	muls	r5, r2
 8000588:	460e      	mov	r6, r1
 800058a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800058e:	f000 f8c5 	bl	800071c <_malloc_r>
 8000592:	4604      	mov	r4, r0
 8000594:	b140      	cbz	r0, 80005a8 <__sfmoreglue+0x28>
 8000596:	2100      	movs	r1, #0
 8000598:	e9c0 1600 	strd	r1, r6, [r0]
 800059c:	300c      	adds	r0, #12
 800059e:	60a0      	str	r0, [r4, #8]
 80005a0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80005a4:	f7ff ffa2 	bl	80004ec <memset>
 80005a8:	4620      	mov	r0, r4
 80005aa:	bd70      	pop	{r4, r5, r6, pc}

080005ac <__sfp_lock_acquire>:
 80005ac:	4801      	ldr	r0, [pc, #4]	; (80005b4 <__sfp_lock_acquire+0x8>)
 80005ae:	f000 b8b3 	b.w	8000718 <__retarget_lock_acquire_recursive>
 80005b2:	bf00      	nop
 80005b4:	200000c0 	.word	0x200000c0

080005b8 <__sfp_lock_release>:
 80005b8:	4801      	ldr	r0, [pc, #4]	; (80005c0 <__sfp_lock_release+0x8>)
 80005ba:	f000 b8ae 	b.w	800071a <__retarget_lock_release_recursive>
 80005be:	bf00      	nop
 80005c0:	200000c0 	.word	0x200000c0

080005c4 <__sinit_lock_acquire>:
 80005c4:	4801      	ldr	r0, [pc, #4]	; (80005cc <__sinit_lock_acquire+0x8>)
 80005c6:	f000 b8a7 	b.w	8000718 <__retarget_lock_acquire_recursive>
 80005ca:	bf00      	nop
 80005cc:	200000bb 	.word	0x200000bb

080005d0 <__sinit_lock_release>:
 80005d0:	4801      	ldr	r0, [pc, #4]	; (80005d8 <__sinit_lock_release+0x8>)
 80005d2:	f000 b8a2 	b.w	800071a <__retarget_lock_release_recursive>
 80005d6:	bf00      	nop
 80005d8:	200000bb 	.word	0x200000bb

080005dc <__sinit>:
 80005dc:	b510      	push	{r4, lr}
 80005de:	4604      	mov	r4, r0
 80005e0:	f7ff fff0 	bl	80005c4 <__sinit_lock_acquire>
 80005e4:	69a3      	ldr	r3, [r4, #24]
 80005e6:	b11b      	cbz	r3, 80005f0 <__sinit+0x14>
 80005e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005ec:	f7ff bff0 	b.w	80005d0 <__sinit_lock_release>
 80005f0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80005f4:	6523      	str	r3, [r4, #80]	; 0x50
 80005f6:	4b13      	ldr	r3, [pc, #76]	; (8000644 <__sinit+0x68>)
 80005f8:	4a13      	ldr	r2, [pc, #76]	; (8000648 <__sinit+0x6c>)
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	62a2      	str	r2, [r4, #40]	; 0x28
 80005fe:	42a3      	cmp	r3, r4
 8000600:	bf08      	it	eq
 8000602:	2301      	moveq	r3, #1
 8000604:	4620      	mov	r0, r4
 8000606:	bf08      	it	eq
 8000608:	61a3      	streq	r3, [r4, #24]
 800060a:	f000 f81f 	bl	800064c <__sfp>
 800060e:	6060      	str	r0, [r4, #4]
 8000610:	4620      	mov	r0, r4
 8000612:	f000 f81b 	bl	800064c <__sfp>
 8000616:	60a0      	str	r0, [r4, #8]
 8000618:	4620      	mov	r0, r4
 800061a:	f000 f817 	bl	800064c <__sfp>
 800061e:	2200      	movs	r2, #0
 8000620:	2104      	movs	r1, #4
 8000622:	60e0      	str	r0, [r4, #12]
 8000624:	6860      	ldr	r0, [r4, #4]
 8000626:	f7ff ff81 	bl	800052c <std>
 800062a:	2201      	movs	r2, #1
 800062c:	2109      	movs	r1, #9
 800062e:	68a0      	ldr	r0, [r4, #8]
 8000630:	f7ff ff7c 	bl	800052c <std>
 8000634:	2202      	movs	r2, #2
 8000636:	2112      	movs	r1, #18
 8000638:	68e0      	ldr	r0, [r4, #12]
 800063a:	f7ff ff77 	bl	800052c <std>
 800063e:	2301      	movs	r3, #1
 8000640:	61a3      	str	r3, [r4, #24]
 8000642:	e7d1      	b.n	80005e8 <__sinit+0xc>
 8000644:	080013ec 	.word	0x080013ec
 8000648:	08000575 	.word	0x08000575

0800064c <__sfp>:
 800064c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800064e:	4607      	mov	r7, r0
 8000650:	f7ff ffac 	bl	80005ac <__sfp_lock_acquire>
 8000654:	4b1e      	ldr	r3, [pc, #120]	; (80006d0 <__sfp+0x84>)
 8000656:	681e      	ldr	r6, [r3, #0]
 8000658:	69b3      	ldr	r3, [r6, #24]
 800065a:	b913      	cbnz	r3, 8000662 <__sfp+0x16>
 800065c:	4630      	mov	r0, r6
 800065e:	f7ff ffbd 	bl	80005dc <__sinit>
 8000662:	3648      	adds	r6, #72	; 0x48
 8000664:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000668:	3b01      	subs	r3, #1
 800066a:	d503      	bpl.n	8000674 <__sfp+0x28>
 800066c:	6833      	ldr	r3, [r6, #0]
 800066e:	b30b      	cbz	r3, 80006b4 <__sfp+0x68>
 8000670:	6836      	ldr	r6, [r6, #0]
 8000672:	e7f7      	b.n	8000664 <__sfp+0x18>
 8000674:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000678:	b9d5      	cbnz	r5, 80006b0 <__sfp+0x64>
 800067a:	4b16      	ldr	r3, [pc, #88]	; (80006d4 <__sfp+0x88>)
 800067c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000680:	60e3      	str	r3, [r4, #12]
 8000682:	6665      	str	r5, [r4, #100]	; 0x64
 8000684:	f000 f847 	bl	8000716 <__retarget_lock_init_recursive>
 8000688:	f7ff ff96 	bl	80005b8 <__sfp_lock_release>
 800068c:	2208      	movs	r2, #8
 800068e:	4629      	mov	r1, r5
 8000690:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000694:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000698:	6025      	str	r5, [r4, #0]
 800069a:	61a5      	str	r5, [r4, #24]
 800069c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80006a0:	f7ff ff24 	bl	80004ec <memset>
 80006a4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80006a8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80006ac:	4620      	mov	r0, r4
 80006ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006b0:	3468      	adds	r4, #104	; 0x68
 80006b2:	e7d9      	b.n	8000668 <__sfp+0x1c>
 80006b4:	2104      	movs	r1, #4
 80006b6:	4638      	mov	r0, r7
 80006b8:	f7ff ff62 	bl	8000580 <__sfmoreglue>
 80006bc:	4604      	mov	r4, r0
 80006be:	6030      	str	r0, [r6, #0]
 80006c0:	2800      	cmp	r0, #0
 80006c2:	d1d5      	bne.n	8000670 <__sfp+0x24>
 80006c4:	f7ff ff78 	bl	80005b8 <__sfp_lock_release>
 80006c8:	230c      	movs	r3, #12
 80006ca:	603b      	str	r3, [r7, #0]
 80006cc:	e7ee      	b.n	80006ac <__sfp+0x60>
 80006ce:	bf00      	nop
 80006d0:	080013ec 	.word	0x080013ec
 80006d4:	ffff0001 	.word	0xffff0001

080006d8 <_fwalk_reent>:
 80006d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006dc:	4606      	mov	r6, r0
 80006de:	4688      	mov	r8, r1
 80006e0:	2700      	movs	r7, #0
 80006e2:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80006e6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006ea:	f1b9 0901 	subs.w	r9, r9, #1
 80006ee:	d505      	bpl.n	80006fc <_fwalk_reent+0x24>
 80006f0:	6824      	ldr	r4, [r4, #0]
 80006f2:	2c00      	cmp	r4, #0
 80006f4:	d1f7      	bne.n	80006e6 <_fwalk_reent+0xe>
 80006f6:	4638      	mov	r0, r7
 80006f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006fc:	89ab      	ldrh	r3, [r5, #12]
 80006fe:	2b01      	cmp	r3, #1
 8000700:	d907      	bls.n	8000712 <_fwalk_reent+0x3a>
 8000702:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000706:	3301      	adds	r3, #1
 8000708:	d003      	beq.n	8000712 <_fwalk_reent+0x3a>
 800070a:	4629      	mov	r1, r5
 800070c:	4630      	mov	r0, r6
 800070e:	47c0      	blx	r8
 8000710:	4307      	orrs	r7, r0
 8000712:	3568      	adds	r5, #104	; 0x68
 8000714:	e7e9      	b.n	80006ea <_fwalk_reent+0x12>

08000716 <__retarget_lock_init_recursive>:
 8000716:	4770      	bx	lr

08000718 <__retarget_lock_acquire_recursive>:
 8000718:	4770      	bx	lr

0800071a <__retarget_lock_release_recursive>:
 800071a:	4770      	bx	lr

0800071c <_malloc_r>:
 800071c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800071e:	1ccd      	adds	r5, r1, #3
 8000720:	f025 0503 	bic.w	r5, r5, #3
 8000724:	3508      	adds	r5, #8
 8000726:	2d0c      	cmp	r5, #12
 8000728:	bf38      	it	cc
 800072a:	250c      	movcc	r5, #12
 800072c:	2d00      	cmp	r5, #0
 800072e:	4606      	mov	r6, r0
 8000730:	db01      	blt.n	8000736 <_malloc_r+0x1a>
 8000732:	42a9      	cmp	r1, r5
 8000734:	d903      	bls.n	800073e <_malloc_r+0x22>
 8000736:	230c      	movs	r3, #12
 8000738:	6033      	str	r3, [r6, #0]
 800073a:	2000      	movs	r0, #0
 800073c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800073e:	f000 fdb1 	bl	80012a4 <__malloc_lock>
 8000742:	4921      	ldr	r1, [pc, #132]	; (80007c8 <_malloc_r+0xac>)
 8000744:	680a      	ldr	r2, [r1, #0]
 8000746:	4614      	mov	r4, r2
 8000748:	b99c      	cbnz	r4, 8000772 <_malloc_r+0x56>
 800074a:	4f20      	ldr	r7, [pc, #128]	; (80007cc <_malloc_r+0xb0>)
 800074c:	683b      	ldr	r3, [r7, #0]
 800074e:	b923      	cbnz	r3, 800075a <_malloc_r+0x3e>
 8000750:	4621      	mov	r1, r4
 8000752:	4630      	mov	r0, r6
 8000754:	f000 fb2a 	bl	8000dac <_sbrk_r>
 8000758:	6038      	str	r0, [r7, #0]
 800075a:	4629      	mov	r1, r5
 800075c:	4630      	mov	r0, r6
 800075e:	f000 fb25 	bl	8000dac <_sbrk_r>
 8000762:	1c43      	adds	r3, r0, #1
 8000764:	d123      	bne.n	80007ae <_malloc_r+0x92>
 8000766:	230c      	movs	r3, #12
 8000768:	4630      	mov	r0, r6
 800076a:	6033      	str	r3, [r6, #0]
 800076c:	f000 fda0 	bl	80012b0 <__malloc_unlock>
 8000770:	e7e3      	b.n	800073a <_malloc_r+0x1e>
 8000772:	6823      	ldr	r3, [r4, #0]
 8000774:	1b5b      	subs	r3, r3, r5
 8000776:	d417      	bmi.n	80007a8 <_malloc_r+0x8c>
 8000778:	2b0b      	cmp	r3, #11
 800077a:	d903      	bls.n	8000784 <_malloc_r+0x68>
 800077c:	6023      	str	r3, [r4, #0]
 800077e:	441c      	add	r4, r3
 8000780:	6025      	str	r5, [r4, #0]
 8000782:	e004      	b.n	800078e <_malloc_r+0x72>
 8000784:	6863      	ldr	r3, [r4, #4]
 8000786:	42a2      	cmp	r2, r4
 8000788:	bf0c      	ite	eq
 800078a:	600b      	streq	r3, [r1, #0]
 800078c:	6053      	strne	r3, [r2, #4]
 800078e:	4630      	mov	r0, r6
 8000790:	f000 fd8e 	bl	80012b0 <__malloc_unlock>
 8000794:	f104 000b 	add.w	r0, r4, #11
 8000798:	1d23      	adds	r3, r4, #4
 800079a:	f020 0007 	bic.w	r0, r0, #7
 800079e:	1ac2      	subs	r2, r0, r3
 80007a0:	d0cc      	beq.n	800073c <_malloc_r+0x20>
 80007a2:	1a1b      	subs	r3, r3, r0
 80007a4:	50a3      	str	r3, [r4, r2]
 80007a6:	e7c9      	b.n	800073c <_malloc_r+0x20>
 80007a8:	4622      	mov	r2, r4
 80007aa:	6864      	ldr	r4, [r4, #4]
 80007ac:	e7cc      	b.n	8000748 <_malloc_r+0x2c>
 80007ae:	1cc4      	adds	r4, r0, #3
 80007b0:	f024 0403 	bic.w	r4, r4, #3
 80007b4:	42a0      	cmp	r0, r4
 80007b6:	d0e3      	beq.n	8000780 <_malloc_r+0x64>
 80007b8:	1a21      	subs	r1, r4, r0
 80007ba:	4630      	mov	r0, r6
 80007bc:	f000 faf6 	bl	8000dac <_sbrk_r>
 80007c0:	3001      	adds	r0, #1
 80007c2:	d1dd      	bne.n	8000780 <_malloc_r+0x64>
 80007c4:	e7cf      	b.n	8000766 <_malloc_r+0x4a>
 80007c6:	bf00      	nop
 80007c8:	200000b0 	.word	0x200000b0
 80007cc:	200000b4 	.word	0x200000b4

080007d0 <__sfputc_r>:
 80007d0:	6893      	ldr	r3, [r2, #8]
 80007d2:	b410      	push	{r4}
 80007d4:	3b01      	subs	r3, #1
 80007d6:	2b00      	cmp	r3, #0
 80007d8:	6093      	str	r3, [r2, #8]
 80007da:	da07      	bge.n	80007ec <__sfputc_r+0x1c>
 80007dc:	6994      	ldr	r4, [r2, #24]
 80007de:	42a3      	cmp	r3, r4
 80007e0:	db01      	blt.n	80007e6 <__sfputc_r+0x16>
 80007e2:	290a      	cmp	r1, #10
 80007e4:	d102      	bne.n	80007ec <__sfputc_r+0x1c>
 80007e6:	bc10      	pop	{r4}
 80007e8:	f000 bb34 	b.w	8000e54 <__swbuf_r>
 80007ec:	6813      	ldr	r3, [r2, #0]
 80007ee:	1c58      	adds	r0, r3, #1
 80007f0:	6010      	str	r0, [r2, #0]
 80007f2:	7019      	strb	r1, [r3, #0]
 80007f4:	4608      	mov	r0, r1
 80007f6:	bc10      	pop	{r4}
 80007f8:	4770      	bx	lr

080007fa <__sfputs_r>:
 80007fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007fc:	4606      	mov	r6, r0
 80007fe:	460f      	mov	r7, r1
 8000800:	4614      	mov	r4, r2
 8000802:	18d5      	adds	r5, r2, r3
 8000804:	42ac      	cmp	r4, r5
 8000806:	d101      	bne.n	800080c <__sfputs_r+0x12>
 8000808:	2000      	movs	r0, #0
 800080a:	e007      	b.n	800081c <__sfputs_r+0x22>
 800080c:	463a      	mov	r2, r7
 800080e:	4630      	mov	r0, r6
 8000810:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000814:	f7ff ffdc 	bl	80007d0 <__sfputc_r>
 8000818:	1c43      	adds	r3, r0, #1
 800081a:	d1f3      	bne.n	8000804 <__sfputs_r+0xa>
 800081c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000820 <_vfiprintf_r>:
 8000820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000824:	460d      	mov	r5, r1
 8000826:	4614      	mov	r4, r2
 8000828:	4698      	mov	r8, r3
 800082a:	4606      	mov	r6, r0
 800082c:	b09d      	sub	sp, #116	; 0x74
 800082e:	b118      	cbz	r0, 8000838 <_vfiprintf_r+0x18>
 8000830:	6983      	ldr	r3, [r0, #24]
 8000832:	b90b      	cbnz	r3, 8000838 <_vfiprintf_r+0x18>
 8000834:	f7ff fed2 	bl	80005dc <__sinit>
 8000838:	4b89      	ldr	r3, [pc, #548]	; (8000a60 <_vfiprintf_r+0x240>)
 800083a:	429d      	cmp	r5, r3
 800083c:	d11b      	bne.n	8000876 <_vfiprintf_r+0x56>
 800083e:	6875      	ldr	r5, [r6, #4]
 8000840:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000842:	07d9      	lsls	r1, r3, #31
 8000844:	d405      	bmi.n	8000852 <_vfiprintf_r+0x32>
 8000846:	89ab      	ldrh	r3, [r5, #12]
 8000848:	059a      	lsls	r2, r3, #22
 800084a:	d402      	bmi.n	8000852 <_vfiprintf_r+0x32>
 800084c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800084e:	f7ff ff63 	bl	8000718 <__retarget_lock_acquire_recursive>
 8000852:	89ab      	ldrh	r3, [r5, #12]
 8000854:	071b      	lsls	r3, r3, #28
 8000856:	d501      	bpl.n	800085c <_vfiprintf_r+0x3c>
 8000858:	692b      	ldr	r3, [r5, #16]
 800085a:	b9eb      	cbnz	r3, 8000898 <_vfiprintf_r+0x78>
 800085c:	4629      	mov	r1, r5
 800085e:	4630      	mov	r0, r6
 8000860:	f000 fb5c 	bl	8000f1c <__swsetup_r>
 8000864:	b1c0      	cbz	r0, 8000898 <_vfiprintf_r+0x78>
 8000866:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000868:	07dc      	lsls	r4, r3, #31
 800086a:	d50e      	bpl.n	800088a <_vfiprintf_r+0x6a>
 800086c:	f04f 30ff 	mov.w	r0, #4294967295
 8000870:	b01d      	add	sp, #116	; 0x74
 8000872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000876:	4b7b      	ldr	r3, [pc, #492]	; (8000a64 <_vfiprintf_r+0x244>)
 8000878:	429d      	cmp	r5, r3
 800087a:	d101      	bne.n	8000880 <_vfiprintf_r+0x60>
 800087c:	68b5      	ldr	r5, [r6, #8]
 800087e:	e7df      	b.n	8000840 <_vfiprintf_r+0x20>
 8000880:	4b79      	ldr	r3, [pc, #484]	; (8000a68 <_vfiprintf_r+0x248>)
 8000882:	429d      	cmp	r5, r3
 8000884:	bf08      	it	eq
 8000886:	68f5      	ldreq	r5, [r6, #12]
 8000888:	e7da      	b.n	8000840 <_vfiprintf_r+0x20>
 800088a:	89ab      	ldrh	r3, [r5, #12]
 800088c:	0598      	lsls	r0, r3, #22
 800088e:	d4ed      	bmi.n	800086c <_vfiprintf_r+0x4c>
 8000890:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000892:	f7ff ff42 	bl	800071a <__retarget_lock_release_recursive>
 8000896:	e7e9      	b.n	800086c <_vfiprintf_r+0x4c>
 8000898:	2300      	movs	r3, #0
 800089a:	9309      	str	r3, [sp, #36]	; 0x24
 800089c:	2320      	movs	r3, #32
 800089e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80008a2:	2330      	movs	r3, #48	; 0x30
 80008a4:	f04f 0901 	mov.w	r9, #1
 80008a8:	f8cd 800c 	str.w	r8, [sp, #12]
 80008ac:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8000a6c <_vfiprintf_r+0x24c>
 80008b0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80008b4:	4623      	mov	r3, r4
 80008b6:	469a      	mov	sl, r3
 80008b8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80008bc:	b10a      	cbz	r2, 80008c2 <_vfiprintf_r+0xa2>
 80008be:	2a25      	cmp	r2, #37	; 0x25
 80008c0:	d1f9      	bne.n	80008b6 <_vfiprintf_r+0x96>
 80008c2:	ebba 0b04 	subs.w	fp, sl, r4
 80008c6:	d00b      	beq.n	80008e0 <_vfiprintf_r+0xc0>
 80008c8:	465b      	mov	r3, fp
 80008ca:	4622      	mov	r2, r4
 80008cc:	4629      	mov	r1, r5
 80008ce:	4630      	mov	r0, r6
 80008d0:	f7ff ff93 	bl	80007fa <__sfputs_r>
 80008d4:	3001      	adds	r0, #1
 80008d6:	f000 80aa 	beq.w	8000a2e <_vfiprintf_r+0x20e>
 80008da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80008dc:	445a      	add	r2, fp
 80008de:	9209      	str	r2, [sp, #36]	; 0x24
 80008e0:	f89a 3000 	ldrb.w	r3, [sl]
 80008e4:	2b00      	cmp	r3, #0
 80008e6:	f000 80a2 	beq.w	8000a2e <_vfiprintf_r+0x20e>
 80008ea:	2300      	movs	r3, #0
 80008ec:	f04f 32ff 	mov.w	r2, #4294967295
 80008f0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80008f4:	f10a 0a01 	add.w	sl, sl, #1
 80008f8:	9304      	str	r3, [sp, #16]
 80008fa:	9307      	str	r3, [sp, #28]
 80008fc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000900:	931a      	str	r3, [sp, #104]	; 0x68
 8000902:	4654      	mov	r4, sl
 8000904:	2205      	movs	r2, #5
 8000906:	f814 1b01 	ldrb.w	r1, [r4], #1
 800090a:	4858      	ldr	r0, [pc, #352]	; (8000a6c <_vfiprintf_r+0x24c>)
 800090c:	f000 fcbc 	bl	8001288 <memchr>
 8000910:	9a04      	ldr	r2, [sp, #16]
 8000912:	b9d8      	cbnz	r0, 800094c <_vfiprintf_r+0x12c>
 8000914:	06d1      	lsls	r1, r2, #27
 8000916:	bf44      	itt	mi
 8000918:	2320      	movmi	r3, #32
 800091a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800091e:	0713      	lsls	r3, r2, #28
 8000920:	bf44      	itt	mi
 8000922:	232b      	movmi	r3, #43	; 0x2b
 8000924:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000928:	f89a 3000 	ldrb.w	r3, [sl]
 800092c:	2b2a      	cmp	r3, #42	; 0x2a
 800092e:	d015      	beq.n	800095c <_vfiprintf_r+0x13c>
 8000930:	4654      	mov	r4, sl
 8000932:	2000      	movs	r0, #0
 8000934:	f04f 0c0a 	mov.w	ip, #10
 8000938:	9a07      	ldr	r2, [sp, #28]
 800093a:	4621      	mov	r1, r4
 800093c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000940:	3b30      	subs	r3, #48	; 0x30
 8000942:	2b09      	cmp	r3, #9
 8000944:	d94e      	bls.n	80009e4 <_vfiprintf_r+0x1c4>
 8000946:	b1b0      	cbz	r0, 8000976 <_vfiprintf_r+0x156>
 8000948:	9207      	str	r2, [sp, #28]
 800094a:	e014      	b.n	8000976 <_vfiprintf_r+0x156>
 800094c:	eba0 0308 	sub.w	r3, r0, r8
 8000950:	fa09 f303 	lsl.w	r3, r9, r3
 8000954:	4313      	orrs	r3, r2
 8000956:	46a2      	mov	sl, r4
 8000958:	9304      	str	r3, [sp, #16]
 800095a:	e7d2      	b.n	8000902 <_vfiprintf_r+0xe2>
 800095c:	9b03      	ldr	r3, [sp, #12]
 800095e:	1d19      	adds	r1, r3, #4
 8000960:	681b      	ldr	r3, [r3, #0]
 8000962:	9103      	str	r1, [sp, #12]
 8000964:	2b00      	cmp	r3, #0
 8000966:	bfbb      	ittet	lt
 8000968:	425b      	neglt	r3, r3
 800096a:	f042 0202 	orrlt.w	r2, r2, #2
 800096e:	9307      	strge	r3, [sp, #28]
 8000970:	9307      	strlt	r3, [sp, #28]
 8000972:	bfb8      	it	lt
 8000974:	9204      	strlt	r2, [sp, #16]
 8000976:	7823      	ldrb	r3, [r4, #0]
 8000978:	2b2e      	cmp	r3, #46	; 0x2e
 800097a:	d10c      	bne.n	8000996 <_vfiprintf_r+0x176>
 800097c:	7863      	ldrb	r3, [r4, #1]
 800097e:	2b2a      	cmp	r3, #42	; 0x2a
 8000980:	d135      	bne.n	80009ee <_vfiprintf_r+0x1ce>
 8000982:	9b03      	ldr	r3, [sp, #12]
 8000984:	3402      	adds	r4, #2
 8000986:	1d1a      	adds	r2, r3, #4
 8000988:	681b      	ldr	r3, [r3, #0]
 800098a:	9203      	str	r2, [sp, #12]
 800098c:	2b00      	cmp	r3, #0
 800098e:	bfb8      	it	lt
 8000990:	f04f 33ff 	movlt.w	r3, #4294967295
 8000994:	9305      	str	r3, [sp, #20]
 8000996:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000a7c <_vfiprintf_r+0x25c>
 800099a:	2203      	movs	r2, #3
 800099c:	4650      	mov	r0, sl
 800099e:	7821      	ldrb	r1, [r4, #0]
 80009a0:	f000 fc72 	bl	8001288 <memchr>
 80009a4:	b140      	cbz	r0, 80009b8 <_vfiprintf_r+0x198>
 80009a6:	2340      	movs	r3, #64	; 0x40
 80009a8:	eba0 000a 	sub.w	r0, r0, sl
 80009ac:	fa03 f000 	lsl.w	r0, r3, r0
 80009b0:	9b04      	ldr	r3, [sp, #16]
 80009b2:	3401      	adds	r4, #1
 80009b4:	4303      	orrs	r3, r0
 80009b6:	9304      	str	r3, [sp, #16]
 80009b8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009bc:	2206      	movs	r2, #6
 80009be:	482c      	ldr	r0, [pc, #176]	; (8000a70 <_vfiprintf_r+0x250>)
 80009c0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80009c4:	f000 fc60 	bl	8001288 <memchr>
 80009c8:	2800      	cmp	r0, #0
 80009ca:	d03f      	beq.n	8000a4c <_vfiprintf_r+0x22c>
 80009cc:	4b29      	ldr	r3, [pc, #164]	; (8000a74 <_vfiprintf_r+0x254>)
 80009ce:	bb1b      	cbnz	r3, 8000a18 <_vfiprintf_r+0x1f8>
 80009d0:	9b03      	ldr	r3, [sp, #12]
 80009d2:	3307      	adds	r3, #7
 80009d4:	f023 0307 	bic.w	r3, r3, #7
 80009d8:	3308      	adds	r3, #8
 80009da:	9303      	str	r3, [sp, #12]
 80009dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80009de:	443b      	add	r3, r7
 80009e0:	9309      	str	r3, [sp, #36]	; 0x24
 80009e2:	e767      	b.n	80008b4 <_vfiprintf_r+0x94>
 80009e4:	460c      	mov	r4, r1
 80009e6:	2001      	movs	r0, #1
 80009e8:	fb0c 3202 	mla	r2, ip, r2, r3
 80009ec:	e7a5      	b.n	800093a <_vfiprintf_r+0x11a>
 80009ee:	2300      	movs	r3, #0
 80009f0:	f04f 0c0a 	mov.w	ip, #10
 80009f4:	4619      	mov	r1, r3
 80009f6:	3401      	adds	r4, #1
 80009f8:	9305      	str	r3, [sp, #20]
 80009fa:	4620      	mov	r0, r4
 80009fc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a00:	3a30      	subs	r2, #48	; 0x30
 8000a02:	2a09      	cmp	r2, #9
 8000a04:	d903      	bls.n	8000a0e <_vfiprintf_r+0x1ee>
 8000a06:	2b00      	cmp	r3, #0
 8000a08:	d0c5      	beq.n	8000996 <_vfiprintf_r+0x176>
 8000a0a:	9105      	str	r1, [sp, #20]
 8000a0c:	e7c3      	b.n	8000996 <_vfiprintf_r+0x176>
 8000a0e:	4604      	mov	r4, r0
 8000a10:	2301      	movs	r3, #1
 8000a12:	fb0c 2101 	mla	r1, ip, r1, r2
 8000a16:	e7f0      	b.n	80009fa <_vfiprintf_r+0x1da>
 8000a18:	ab03      	add	r3, sp, #12
 8000a1a:	9300      	str	r3, [sp, #0]
 8000a1c:	462a      	mov	r2, r5
 8000a1e:	4630      	mov	r0, r6
 8000a20:	4b15      	ldr	r3, [pc, #84]	; (8000a78 <_vfiprintf_r+0x258>)
 8000a22:	a904      	add	r1, sp, #16
 8000a24:	f3af 8000 	nop.w
 8000a28:	4607      	mov	r7, r0
 8000a2a:	1c78      	adds	r0, r7, #1
 8000a2c:	d1d6      	bne.n	80009dc <_vfiprintf_r+0x1bc>
 8000a2e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a30:	07d9      	lsls	r1, r3, #31
 8000a32:	d405      	bmi.n	8000a40 <_vfiprintf_r+0x220>
 8000a34:	89ab      	ldrh	r3, [r5, #12]
 8000a36:	059a      	lsls	r2, r3, #22
 8000a38:	d402      	bmi.n	8000a40 <_vfiprintf_r+0x220>
 8000a3a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a3c:	f7ff fe6d 	bl	800071a <__retarget_lock_release_recursive>
 8000a40:	89ab      	ldrh	r3, [r5, #12]
 8000a42:	065b      	lsls	r3, r3, #25
 8000a44:	f53f af12 	bmi.w	800086c <_vfiprintf_r+0x4c>
 8000a48:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000a4a:	e711      	b.n	8000870 <_vfiprintf_r+0x50>
 8000a4c:	ab03      	add	r3, sp, #12
 8000a4e:	9300      	str	r3, [sp, #0]
 8000a50:	462a      	mov	r2, r5
 8000a52:	4630      	mov	r0, r6
 8000a54:	4b08      	ldr	r3, [pc, #32]	; (8000a78 <_vfiprintf_r+0x258>)
 8000a56:	a904      	add	r1, sp, #16
 8000a58:	f000 f882 	bl	8000b60 <_printf_i>
 8000a5c:	e7e4      	b.n	8000a28 <_vfiprintf_r+0x208>
 8000a5e:	bf00      	nop
 8000a60:	08001410 	.word	0x08001410
 8000a64:	08001430 	.word	0x08001430
 8000a68:	080013f0 	.word	0x080013f0
 8000a6c:	08001450 	.word	0x08001450
 8000a70:	0800145a 	.word	0x0800145a
 8000a74:	00000000 	.word	0x00000000
 8000a78:	080007fb 	.word	0x080007fb
 8000a7c:	08001456 	.word	0x08001456

08000a80 <_printf_common>:
 8000a80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000a84:	4616      	mov	r6, r2
 8000a86:	4699      	mov	r9, r3
 8000a88:	688a      	ldr	r2, [r1, #8]
 8000a8a:	690b      	ldr	r3, [r1, #16]
 8000a8c:	4607      	mov	r7, r0
 8000a8e:	4293      	cmp	r3, r2
 8000a90:	bfb8      	it	lt
 8000a92:	4613      	movlt	r3, r2
 8000a94:	6033      	str	r3, [r6, #0]
 8000a96:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000a9a:	460c      	mov	r4, r1
 8000a9c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000aa0:	b10a      	cbz	r2, 8000aa6 <_printf_common+0x26>
 8000aa2:	3301      	adds	r3, #1
 8000aa4:	6033      	str	r3, [r6, #0]
 8000aa6:	6823      	ldr	r3, [r4, #0]
 8000aa8:	0699      	lsls	r1, r3, #26
 8000aaa:	bf42      	ittt	mi
 8000aac:	6833      	ldrmi	r3, [r6, #0]
 8000aae:	3302      	addmi	r3, #2
 8000ab0:	6033      	strmi	r3, [r6, #0]
 8000ab2:	6825      	ldr	r5, [r4, #0]
 8000ab4:	f015 0506 	ands.w	r5, r5, #6
 8000ab8:	d106      	bne.n	8000ac8 <_printf_common+0x48>
 8000aba:	f104 0a19 	add.w	sl, r4, #25
 8000abe:	68e3      	ldr	r3, [r4, #12]
 8000ac0:	6832      	ldr	r2, [r6, #0]
 8000ac2:	1a9b      	subs	r3, r3, r2
 8000ac4:	42ab      	cmp	r3, r5
 8000ac6:	dc28      	bgt.n	8000b1a <_printf_common+0x9a>
 8000ac8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000acc:	1e13      	subs	r3, r2, #0
 8000ace:	6822      	ldr	r2, [r4, #0]
 8000ad0:	bf18      	it	ne
 8000ad2:	2301      	movne	r3, #1
 8000ad4:	0692      	lsls	r2, r2, #26
 8000ad6:	d42d      	bmi.n	8000b34 <_printf_common+0xb4>
 8000ad8:	4649      	mov	r1, r9
 8000ada:	4638      	mov	r0, r7
 8000adc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000ae0:	47c0      	blx	r8
 8000ae2:	3001      	adds	r0, #1
 8000ae4:	d020      	beq.n	8000b28 <_printf_common+0xa8>
 8000ae6:	6823      	ldr	r3, [r4, #0]
 8000ae8:	68e5      	ldr	r5, [r4, #12]
 8000aea:	f003 0306 	and.w	r3, r3, #6
 8000aee:	2b04      	cmp	r3, #4
 8000af0:	bf18      	it	ne
 8000af2:	2500      	movne	r5, #0
 8000af4:	6832      	ldr	r2, [r6, #0]
 8000af6:	f04f 0600 	mov.w	r6, #0
 8000afa:	68a3      	ldr	r3, [r4, #8]
 8000afc:	bf08      	it	eq
 8000afe:	1aad      	subeq	r5, r5, r2
 8000b00:	6922      	ldr	r2, [r4, #16]
 8000b02:	bf08      	it	eq
 8000b04:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b08:	4293      	cmp	r3, r2
 8000b0a:	bfc4      	itt	gt
 8000b0c:	1a9b      	subgt	r3, r3, r2
 8000b0e:	18ed      	addgt	r5, r5, r3
 8000b10:	341a      	adds	r4, #26
 8000b12:	42b5      	cmp	r5, r6
 8000b14:	d11a      	bne.n	8000b4c <_printf_common+0xcc>
 8000b16:	2000      	movs	r0, #0
 8000b18:	e008      	b.n	8000b2c <_printf_common+0xac>
 8000b1a:	2301      	movs	r3, #1
 8000b1c:	4652      	mov	r2, sl
 8000b1e:	4649      	mov	r1, r9
 8000b20:	4638      	mov	r0, r7
 8000b22:	47c0      	blx	r8
 8000b24:	3001      	adds	r0, #1
 8000b26:	d103      	bne.n	8000b30 <_printf_common+0xb0>
 8000b28:	f04f 30ff 	mov.w	r0, #4294967295
 8000b2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b30:	3501      	adds	r5, #1
 8000b32:	e7c4      	b.n	8000abe <_printf_common+0x3e>
 8000b34:	2030      	movs	r0, #48	; 0x30
 8000b36:	18e1      	adds	r1, r4, r3
 8000b38:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000b3c:	1c5a      	adds	r2, r3, #1
 8000b3e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000b42:	4422      	add	r2, r4
 8000b44:	3302      	adds	r3, #2
 8000b46:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000b4a:	e7c5      	b.n	8000ad8 <_printf_common+0x58>
 8000b4c:	2301      	movs	r3, #1
 8000b4e:	4622      	mov	r2, r4
 8000b50:	4649      	mov	r1, r9
 8000b52:	4638      	mov	r0, r7
 8000b54:	47c0      	blx	r8
 8000b56:	3001      	adds	r0, #1
 8000b58:	d0e6      	beq.n	8000b28 <_printf_common+0xa8>
 8000b5a:	3601      	adds	r6, #1
 8000b5c:	e7d9      	b.n	8000b12 <_printf_common+0x92>
	...

08000b60 <_printf_i>:
 8000b60:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000b64:	460c      	mov	r4, r1
 8000b66:	7e27      	ldrb	r7, [r4, #24]
 8000b68:	4691      	mov	r9, r2
 8000b6a:	2f78      	cmp	r7, #120	; 0x78
 8000b6c:	4680      	mov	r8, r0
 8000b6e:	469a      	mov	sl, r3
 8000b70:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000b72:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b76:	d807      	bhi.n	8000b88 <_printf_i+0x28>
 8000b78:	2f62      	cmp	r7, #98	; 0x62
 8000b7a:	d80a      	bhi.n	8000b92 <_printf_i+0x32>
 8000b7c:	2f00      	cmp	r7, #0
 8000b7e:	f000 80d9 	beq.w	8000d34 <_printf_i+0x1d4>
 8000b82:	2f58      	cmp	r7, #88	; 0x58
 8000b84:	f000 80a4 	beq.w	8000cd0 <_printf_i+0x170>
 8000b88:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000b8c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000b90:	e03a      	b.n	8000c08 <_printf_i+0xa8>
 8000b92:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000b96:	2b15      	cmp	r3, #21
 8000b98:	d8f6      	bhi.n	8000b88 <_printf_i+0x28>
 8000b9a:	a001      	add	r0, pc, #4	; (adr r0, 8000ba0 <_printf_i+0x40>)
 8000b9c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000ba0:	08000bf9 	.word	0x08000bf9
 8000ba4:	08000c0d 	.word	0x08000c0d
 8000ba8:	08000b89 	.word	0x08000b89
 8000bac:	08000b89 	.word	0x08000b89
 8000bb0:	08000b89 	.word	0x08000b89
 8000bb4:	08000b89 	.word	0x08000b89
 8000bb8:	08000c0d 	.word	0x08000c0d
 8000bbc:	08000b89 	.word	0x08000b89
 8000bc0:	08000b89 	.word	0x08000b89
 8000bc4:	08000b89 	.word	0x08000b89
 8000bc8:	08000b89 	.word	0x08000b89
 8000bcc:	08000d1b 	.word	0x08000d1b
 8000bd0:	08000c3d 	.word	0x08000c3d
 8000bd4:	08000cfd 	.word	0x08000cfd
 8000bd8:	08000b89 	.word	0x08000b89
 8000bdc:	08000b89 	.word	0x08000b89
 8000be0:	08000d3d 	.word	0x08000d3d
 8000be4:	08000b89 	.word	0x08000b89
 8000be8:	08000c3d 	.word	0x08000c3d
 8000bec:	08000b89 	.word	0x08000b89
 8000bf0:	08000b89 	.word	0x08000b89
 8000bf4:	08000d05 	.word	0x08000d05
 8000bf8:	680b      	ldr	r3, [r1, #0]
 8000bfa:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000bfe:	1d1a      	adds	r2, r3, #4
 8000c00:	681b      	ldr	r3, [r3, #0]
 8000c02:	600a      	str	r2, [r1, #0]
 8000c04:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c08:	2301      	movs	r3, #1
 8000c0a:	e0a4      	b.n	8000d56 <_printf_i+0x1f6>
 8000c0c:	6825      	ldr	r5, [r4, #0]
 8000c0e:	6808      	ldr	r0, [r1, #0]
 8000c10:	062e      	lsls	r6, r5, #24
 8000c12:	f100 0304 	add.w	r3, r0, #4
 8000c16:	d50a      	bpl.n	8000c2e <_printf_i+0xce>
 8000c18:	6805      	ldr	r5, [r0, #0]
 8000c1a:	600b      	str	r3, [r1, #0]
 8000c1c:	2d00      	cmp	r5, #0
 8000c1e:	da03      	bge.n	8000c28 <_printf_i+0xc8>
 8000c20:	232d      	movs	r3, #45	; 0x2d
 8000c22:	426d      	negs	r5, r5
 8000c24:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000c28:	230a      	movs	r3, #10
 8000c2a:	485e      	ldr	r0, [pc, #376]	; (8000da4 <_printf_i+0x244>)
 8000c2c:	e019      	b.n	8000c62 <_printf_i+0x102>
 8000c2e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000c32:	6805      	ldr	r5, [r0, #0]
 8000c34:	600b      	str	r3, [r1, #0]
 8000c36:	bf18      	it	ne
 8000c38:	b22d      	sxthne	r5, r5
 8000c3a:	e7ef      	b.n	8000c1c <_printf_i+0xbc>
 8000c3c:	680b      	ldr	r3, [r1, #0]
 8000c3e:	6825      	ldr	r5, [r4, #0]
 8000c40:	1d18      	adds	r0, r3, #4
 8000c42:	6008      	str	r0, [r1, #0]
 8000c44:	0628      	lsls	r0, r5, #24
 8000c46:	d501      	bpl.n	8000c4c <_printf_i+0xec>
 8000c48:	681d      	ldr	r5, [r3, #0]
 8000c4a:	e002      	b.n	8000c52 <_printf_i+0xf2>
 8000c4c:	0669      	lsls	r1, r5, #25
 8000c4e:	d5fb      	bpl.n	8000c48 <_printf_i+0xe8>
 8000c50:	881d      	ldrh	r5, [r3, #0]
 8000c52:	2f6f      	cmp	r7, #111	; 0x6f
 8000c54:	bf0c      	ite	eq
 8000c56:	2308      	moveq	r3, #8
 8000c58:	230a      	movne	r3, #10
 8000c5a:	4852      	ldr	r0, [pc, #328]	; (8000da4 <_printf_i+0x244>)
 8000c5c:	2100      	movs	r1, #0
 8000c5e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000c62:	6866      	ldr	r6, [r4, #4]
 8000c64:	2e00      	cmp	r6, #0
 8000c66:	bfa8      	it	ge
 8000c68:	6821      	ldrge	r1, [r4, #0]
 8000c6a:	60a6      	str	r6, [r4, #8]
 8000c6c:	bfa4      	itt	ge
 8000c6e:	f021 0104 	bicge.w	r1, r1, #4
 8000c72:	6021      	strge	r1, [r4, #0]
 8000c74:	b90d      	cbnz	r5, 8000c7a <_printf_i+0x11a>
 8000c76:	2e00      	cmp	r6, #0
 8000c78:	d04d      	beq.n	8000d16 <_printf_i+0x1b6>
 8000c7a:	4616      	mov	r6, r2
 8000c7c:	fbb5 f1f3 	udiv	r1, r5, r3
 8000c80:	fb03 5711 	mls	r7, r3, r1, r5
 8000c84:	5dc7      	ldrb	r7, [r0, r7]
 8000c86:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000c8a:	462f      	mov	r7, r5
 8000c8c:	42bb      	cmp	r3, r7
 8000c8e:	460d      	mov	r5, r1
 8000c90:	d9f4      	bls.n	8000c7c <_printf_i+0x11c>
 8000c92:	2b08      	cmp	r3, #8
 8000c94:	d10b      	bne.n	8000cae <_printf_i+0x14e>
 8000c96:	6823      	ldr	r3, [r4, #0]
 8000c98:	07df      	lsls	r7, r3, #31
 8000c9a:	d508      	bpl.n	8000cae <_printf_i+0x14e>
 8000c9c:	6923      	ldr	r3, [r4, #16]
 8000c9e:	6861      	ldr	r1, [r4, #4]
 8000ca0:	4299      	cmp	r1, r3
 8000ca2:	bfde      	ittt	le
 8000ca4:	2330      	movle	r3, #48	; 0x30
 8000ca6:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000caa:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000cae:	1b92      	subs	r2, r2, r6
 8000cb0:	6122      	str	r2, [r4, #16]
 8000cb2:	464b      	mov	r3, r9
 8000cb4:	4621      	mov	r1, r4
 8000cb6:	4640      	mov	r0, r8
 8000cb8:	f8cd a000 	str.w	sl, [sp]
 8000cbc:	aa03      	add	r2, sp, #12
 8000cbe:	f7ff fedf 	bl	8000a80 <_printf_common>
 8000cc2:	3001      	adds	r0, #1
 8000cc4:	d14c      	bne.n	8000d60 <_printf_i+0x200>
 8000cc6:	f04f 30ff 	mov.w	r0, #4294967295
 8000cca:	b004      	add	sp, #16
 8000ccc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd0:	4834      	ldr	r0, [pc, #208]	; (8000da4 <_printf_i+0x244>)
 8000cd2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000cd6:	680e      	ldr	r6, [r1, #0]
 8000cd8:	6823      	ldr	r3, [r4, #0]
 8000cda:	f856 5b04 	ldr.w	r5, [r6], #4
 8000cde:	061f      	lsls	r7, r3, #24
 8000ce0:	600e      	str	r6, [r1, #0]
 8000ce2:	d514      	bpl.n	8000d0e <_printf_i+0x1ae>
 8000ce4:	07d9      	lsls	r1, r3, #31
 8000ce6:	bf44      	itt	mi
 8000ce8:	f043 0320 	orrmi.w	r3, r3, #32
 8000cec:	6023      	strmi	r3, [r4, #0]
 8000cee:	b91d      	cbnz	r5, 8000cf8 <_printf_i+0x198>
 8000cf0:	6823      	ldr	r3, [r4, #0]
 8000cf2:	f023 0320 	bic.w	r3, r3, #32
 8000cf6:	6023      	str	r3, [r4, #0]
 8000cf8:	2310      	movs	r3, #16
 8000cfa:	e7af      	b.n	8000c5c <_printf_i+0xfc>
 8000cfc:	6823      	ldr	r3, [r4, #0]
 8000cfe:	f043 0320 	orr.w	r3, r3, #32
 8000d02:	6023      	str	r3, [r4, #0]
 8000d04:	2378      	movs	r3, #120	; 0x78
 8000d06:	4828      	ldr	r0, [pc, #160]	; (8000da8 <_printf_i+0x248>)
 8000d08:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000d0c:	e7e3      	b.n	8000cd6 <_printf_i+0x176>
 8000d0e:	065e      	lsls	r6, r3, #25
 8000d10:	bf48      	it	mi
 8000d12:	b2ad      	uxthmi	r5, r5
 8000d14:	e7e6      	b.n	8000ce4 <_printf_i+0x184>
 8000d16:	4616      	mov	r6, r2
 8000d18:	e7bb      	b.n	8000c92 <_printf_i+0x132>
 8000d1a:	680b      	ldr	r3, [r1, #0]
 8000d1c:	6826      	ldr	r6, [r4, #0]
 8000d1e:	1d1d      	adds	r5, r3, #4
 8000d20:	6960      	ldr	r0, [r4, #20]
 8000d22:	600d      	str	r5, [r1, #0]
 8000d24:	0635      	lsls	r5, r6, #24
 8000d26:	681b      	ldr	r3, [r3, #0]
 8000d28:	d501      	bpl.n	8000d2e <_printf_i+0x1ce>
 8000d2a:	6018      	str	r0, [r3, #0]
 8000d2c:	e002      	b.n	8000d34 <_printf_i+0x1d4>
 8000d2e:	0671      	lsls	r1, r6, #25
 8000d30:	d5fb      	bpl.n	8000d2a <_printf_i+0x1ca>
 8000d32:	8018      	strh	r0, [r3, #0]
 8000d34:	2300      	movs	r3, #0
 8000d36:	4616      	mov	r6, r2
 8000d38:	6123      	str	r3, [r4, #16]
 8000d3a:	e7ba      	b.n	8000cb2 <_printf_i+0x152>
 8000d3c:	680b      	ldr	r3, [r1, #0]
 8000d3e:	1d1a      	adds	r2, r3, #4
 8000d40:	600a      	str	r2, [r1, #0]
 8000d42:	681e      	ldr	r6, [r3, #0]
 8000d44:	2100      	movs	r1, #0
 8000d46:	4630      	mov	r0, r6
 8000d48:	6862      	ldr	r2, [r4, #4]
 8000d4a:	f000 fa9d 	bl	8001288 <memchr>
 8000d4e:	b108      	cbz	r0, 8000d54 <_printf_i+0x1f4>
 8000d50:	1b80      	subs	r0, r0, r6
 8000d52:	6060      	str	r0, [r4, #4]
 8000d54:	6863      	ldr	r3, [r4, #4]
 8000d56:	6123      	str	r3, [r4, #16]
 8000d58:	2300      	movs	r3, #0
 8000d5a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d5e:	e7a8      	b.n	8000cb2 <_printf_i+0x152>
 8000d60:	4632      	mov	r2, r6
 8000d62:	4649      	mov	r1, r9
 8000d64:	4640      	mov	r0, r8
 8000d66:	6923      	ldr	r3, [r4, #16]
 8000d68:	47d0      	blx	sl
 8000d6a:	3001      	adds	r0, #1
 8000d6c:	d0ab      	beq.n	8000cc6 <_printf_i+0x166>
 8000d6e:	6823      	ldr	r3, [r4, #0]
 8000d70:	079b      	lsls	r3, r3, #30
 8000d72:	d413      	bmi.n	8000d9c <_printf_i+0x23c>
 8000d74:	68e0      	ldr	r0, [r4, #12]
 8000d76:	9b03      	ldr	r3, [sp, #12]
 8000d78:	4298      	cmp	r0, r3
 8000d7a:	bfb8      	it	lt
 8000d7c:	4618      	movlt	r0, r3
 8000d7e:	e7a4      	b.n	8000cca <_printf_i+0x16a>
 8000d80:	2301      	movs	r3, #1
 8000d82:	4632      	mov	r2, r6
 8000d84:	4649      	mov	r1, r9
 8000d86:	4640      	mov	r0, r8
 8000d88:	47d0      	blx	sl
 8000d8a:	3001      	adds	r0, #1
 8000d8c:	d09b      	beq.n	8000cc6 <_printf_i+0x166>
 8000d8e:	3501      	adds	r5, #1
 8000d90:	68e3      	ldr	r3, [r4, #12]
 8000d92:	9903      	ldr	r1, [sp, #12]
 8000d94:	1a5b      	subs	r3, r3, r1
 8000d96:	42ab      	cmp	r3, r5
 8000d98:	dcf2      	bgt.n	8000d80 <_printf_i+0x220>
 8000d9a:	e7eb      	b.n	8000d74 <_printf_i+0x214>
 8000d9c:	2500      	movs	r5, #0
 8000d9e:	f104 0619 	add.w	r6, r4, #25
 8000da2:	e7f5      	b.n	8000d90 <_printf_i+0x230>
 8000da4:	08001461 	.word	0x08001461
 8000da8:	08001472 	.word	0x08001472

08000dac <_sbrk_r>:
 8000dac:	b538      	push	{r3, r4, r5, lr}
 8000dae:	2300      	movs	r3, #0
 8000db0:	4d05      	ldr	r5, [pc, #20]	; (8000dc8 <_sbrk_r+0x1c>)
 8000db2:	4604      	mov	r4, r0
 8000db4:	4608      	mov	r0, r1
 8000db6:	602b      	str	r3, [r5, #0]
 8000db8:	f7ff fb0e 	bl	80003d8 <_sbrk>
 8000dbc:	1c43      	adds	r3, r0, #1
 8000dbe:	d102      	bne.n	8000dc6 <_sbrk_r+0x1a>
 8000dc0:	682b      	ldr	r3, [r5, #0]
 8000dc2:	b103      	cbz	r3, 8000dc6 <_sbrk_r+0x1a>
 8000dc4:	6023      	str	r3, [r4, #0]
 8000dc6:	bd38      	pop	{r3, r4, r5, pc}
 8000dc8:	200000c4 	.word	0x200000c4

08000dcc <__sread>:
 8000dcc:	b510      	push	{r4, lr}
 8000dce:	460c      	mov	r4, r1
 8000dd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dd4:	f000 fabe 	bl	8001354 <_read_r>
 8000dd8:	2800      	cmp	r0, #0
 8000dda:	bfab      	itete	ge
 8000ddc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000dde:	89a3      	ldrhlt	r3, [r4, #12]
 8000de0:	181b      	addge	r3, r3, r0
 8000de2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000de6:	bfac      	ite	ge
 8000de8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000dea:	81a3      	strhlt	r3, [r4, #12]
 8000dec:	bd10      	pop	{r4, pc}

08000dee <__swrite>:
 8000dee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000df2:	461f      	mov	r7, r3
 8000df4:	898b      	ldrh	r3, [r1, #12]
 8000df6:	4605      	mov	r5, r0
 8000df8:	05db      	lsls	r3, r3, #23
 8000dfa:	460c      	mov	r4, r1
 8000dfc:	4616      	mov	r6, r2
 8000dfe:	d505      	bpl.n	8000e0c <__swrite+0x1e>
 8000e00:	2302      	movs	r3, #2
 8000e02:	2200      	movs	r2, #0
 8000e04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e08:	f000 f9c8 	bl	800119c <_lseek_r>
 8000e0c:	89a3      	ldrh	r3, [r4, #12]
 8000e0e:	4632      	mov	r2, r6
 8000e10:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e14:	81a3      	strh	r3, [r4, #12]
 8000e16:	4628      	mov	r0, r5
 8000e18:	463b      	mov	r3, r7
 8000e1a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e22:	f000 b869 	b.w	8000ef8 <_write_r>

08000e26 <__sseek>:
 8000e26:	b510      	push	{r4, lr}
 8000e28:	460c      	mov	r4, r1
 8000e2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e2e:	f000 f9b5 	bl	800119c <_lseek_r>
 8000e32:	1c43      	adds	r3, r0, #1
 8000e34:	89a3      	ldrh	r3, [r4, #12]
 8000e36:	bf15      	itete	ne
 8000e38:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e3a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000e3e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e42:	81a3      	strheq	r3, [r4, #12]
 8000e44:	bf18      	it	ne
 8000e46:	81a3      	strhne	r3, [r4, #12]
 8000e48:	bd10      	pop	{r4, pc}

08000e4a <__sclose>:
 8000e4a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e4e:	f000 b8d3 	b.w	8000ff8 <_close_r>
	...

08000e54 <__swbuf_r>:
 8000e54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e56:	460e      	mov	r6, r1
 8000e58:	4614      	mov	r4, r2
 8000e5a:	4605      	mov	r5, r0
 8000e5c:	b118      	cbz	r0, 8000e66 <__swbuf_r+0x12>
 8000e5e:	6983      	ldr	r3, [r0, #24]
 8000e60:	b90b      	cbnz	r3, 8000e66 <__swbuf_r+0x12>
 8000e62:	f7ff fbbb 	bl	80005dc <__sinit>
 8000e66:	4b21      	ldr	r3, [pc, #132]	; (8000eec <__swbuf_r+0x98>)
 8000e68:	429c      	cmp	r4, r3
 8000e6a:	d12b      	bne.n	8000ec4 <__swbuf_r+0x70>
 8000e6c:	686c      	ldr	r4, [r5, #4]
 8000e6e:	69a3      	ldr	r3, [r4, #24]
 8000e70:	60a3      	str	r3, [r4, #8]
 8000e72:	89a3      	ldrh	r3, [r4, #12]
 8000e74:	071a      	lsls	r2, r3, #28
 8000e76:	d52f      	bpl.n	8000ed8 <__swbuf_r+0x84>
 8000e78:	6923      	ldr	r3, [r4, #16]
 8000e7a:	b36b      	cbz	r3, 8000ed8 <__swbuf_r+0x84>
 8000e7c:	6923      	ldr	r3, [r4, #16]
 8000e7e:	6820      	ldr	r0, [r4, #0]
 8000e80:	b2f6      	uxtb	r6, r6
 8000e82:	1ac0      	subs	r0, r0, r3
 8000e84:	6963      	ldr	r3, [r4, #20]
 8000e86:	4637      	mov	r7, r6
 8000e88:	4283      	cmp	r3, r0
 8000e8a:	dc04      	bgt.n	8000e96 <__swbuf_r+0x42>
 8000e8c:	4621      	mov	r1, r4
 8000e8e:	4628      	mov	r0, r5
 8000e90:	f000 f948 	bl	8001124 <_fflush_r>
 8000e94:	bb30      	cbnz	r0, 8000ee4 <__swbuf_r+0x90>
 8000e96:	68a3      	ldr	r3, [r4, #8]
 8000e98:	3001      	adds	r0, #1
 8000e9a:	3b01      	subs	r3, #1
 8000e9c:	60a3      	str	r3, [r4, #8]
 8000e9e:	6823      	ldr	r3, [r4, #0]
 8000ea0:	1c5a      	adds	r2, r3, #1
 8000ea2:	6022      	str	r2, [r4, #0]
 8000ea4:	701e      	strb	r6, [r3, #0]
 8000ea6:	6963      	ldr	r3, [r4, #20]
 8000ea8:	4283      	cmp	r3, r0
 8000eaa:	d004      	beq.n	8000eb6 <__swbuf_r+0x62>
 8000eac:	89a3      	ldrh	r3, [r4, #12]
 8000eae:	07db      	lsls	r3, r3, #31
 8000eb0:	d506      	bpl.n	8000ec0 <__swbuf_r+0x6c>
 8000eb2:	2e0a      	cmp	r6, #10
 8000eb4:	d104      	bne.n	8000ec0 <__swbuf_r+0x6c>
 8000eb6:	4621      	mov	r1, r4
 8000eb8:	4628      	mov	r0, r5
 8000eba:	f000 f933 	bl	8001124 <_fflush_r>
 8000ebe:	b988      	cbnz	r0, 8000ee4 <__swbuf_r+0x90>
 8000ec0:	4638      	mov	r0, r7
 8000ec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ec4:	4b0a      	ldr	r3, [pc, #40]	; (8000ef0 <__swbuf_r+0x9c>)
 8000ec6:	429c      	cmp	r4, r3
 8000ec8:	d101      	bne.n	8000ece <__swbuf_r+0x7a>
 8000eca:	68ac      	ldr	r4, [r5, #8]
 8000ecc:	e7cf      	b.n	8000e6e <__swbuf_r+0x1a>
 8000ece:	4b09      	ldr	r3, [pc, #36]	; (8000ef4 <__swbuf_r+0xa0>)
 8000ed0:	429c      	cmp	r4, r3
 8000ed2:	bf08      	it	eq
 8000ed4:	68ec      	ldreq	r4, [r5, #12]
 8000ed6:	e7ca      	b.n	8000e6e <__swbuf_r+0x1a>
 8000ed8:	4621      	mov	r1, r4
 8000eda:	4628      	mov	r0, r5
 8000edc:	f000 f81e 	bl	8000f1c <__swsetup_r>
 8000ee0:	2800      	cmp	r0, #0
 8000ee2:	d0cb      	beq.n	8000e7c <__swbuf_r+0x28>
 8000ee4:	f04f 37ff 	mov.w	r7, #4294967295
 8000ee8:	e7ea      	b.n	8000ec0 <__swbuf_r+0x6c>
 8000eea:	bf00      	nop
 8000eec:	08001410 	.word	0x08001410
 8000ef0:	08001430 	.word	0x08001430
 8000ef4:	080013f0 	.word	0x080013f0

08000ef8 <_write_r>:
 8000ef8:	b538      	push	{r3, r4, r5, lr}
 8000efa:	4604      	mov	r4, r0
 8000efc:	4608      	mov	r0, r1
 8000efe:	4611      	mov	r1, r2
 8000f00:	2200      	movs	r2, #0
 8000f02:	4d05      	ldr	r5, [pc, #20]	; (8000f18 <_write_r+0x20>)
 8000f04:	602a      	str	r2, [r5, #0]
 8000f06:	461a      	mov	r2, r3
 8000f08:	f7ff fa19 	bl	800033e <_write>
 8000f0c:	1c43      	adds	r3, r0, #1
 8000f0e:	d102      	bne.n	8000f16 <_write_r+0x1e>
 8000f10:	682b      	ldr	r3, [r5, #0]
 8000f12:	b103      	cbz	r3, 8000f16 <_write_r+0x1e>
 8000f14:	6023      	str	r3, [r4, #0]
 8000f16:	bd38      	pop	{r3, r4, r5, pc}
 8000f18:	200000c4 	.word	0x200000c4

08000f1c <__swsetup_r>:
 8000f1c:	4b32      	ldr	r3, [pc, #200]	; (8000fe8 <__swsetup_r+0xcc>)
 8000f1e:	b570      	push	{r4, r5, r6, lr}
 8000f20:	681d      	ldr	r5, [r3, #0]
 8000f22:	4606      	mov	r6, r0
 8000f24:	460c      	mov	r4, r1
 8000f26:	b125      	cbz	r5, 8000f32 <__swsetup_r+0x16>
 8000f28:	69ab      	ldr	r3, [r5, #24]
 8000f2a:	b913      	cbnz	r3, 8000f32 <__swsetup_r+0x16>
 8000f2c:	4628      	mov	r0, r5
 8000f2e:	f7ff fb55 	bl	80005dc <__sinit>
 8000f32:	4b2e      	ldr	r3, [pc, #184]	; (8000fec <__swsetup_r+0xd0>)
 8000f34:	429c      	cmp	r4, r3
 8000f36:	d10f      	bne.n	8000f58 <__swsetup_r+0x3c>
 8000f38:	686c      	ldr	r4, [r5, #4]
 8000f3a:	89a3      	ldrh	r3, [r4, #12]
 8000f3c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000f40:	0719      	lsls	r1, r3, #28
 8000f42:	d42c      	bmi.n	8000f9e <__swsetup_r+0x82>
 8000f44:	06dd      	lsls	r5, r3, #27
 8000f46:	d411      	bmi.n	8000f6c <__swsetup_r+0x50>
 8000f48:	2309      	movs	r3, #9
 8000f4a:	6033      	str	r3, [r6, #0]
 8000f4c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000f50:	f04f 30ff 	mov.w	r0, #4294967295
 8000f54:	81a3      	strh	r3, [r4, #12]
 8000f56:	e03e      	b.n	8000fd6 <__swsetup_r+0xba>
 8000f58:	4b25      	ldr	r3, [pc, #148]	; (8000ff0 <__swsetup_r+0xd4>)
 8000f5a:	429c      	cmp	r4, r3
 8000f5c:	d101      	bne.n	8000f62 <__swsetup_r+0x46>
 8000f5e:	68ac      	ldr	r4, [r5, #8]
 8000f60:	e7eb      	b.n	8000f3a <__swsetup_r+0x1e>
 8000f62:	4b24      	ldr	r3, [pc, #144]	; (8000ff4 <__swsetup_r+0xd8>)
 8000f64:	429c      	cmp	r4, r3
 8000f66:	bf08      	it	eq
 8000f68:	68ec      	ldreq	r4, [r5, #12]
 8000f6a:	e7e6      	b.n	8000f3a <__swsetup_r+0x1e>
 8000f6c:	0758      	lsls	r0, r3, #29
 8000f6e:	d512      	bpl.n	8000f96 <__swsetup_r+0x7a>
 8000f70:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f72:	b141      	cbz	r1, 8000f86 <__swsetup_r+0x6a>
 8000f74:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f78:	4299      	cmp	r1, r3
 8000f7a:	d002      	beq.n	8000f82 <__swsetup_r+0x66>
 8000f7c:	4630      	mov	r0, r6
 8000f7e:	f000 f99d 	bl	80012bc <_free_r>
 8000f82:	2300      	movs	r3, #0
 8000f84:	6363      	str	r3, [r4, #52]	; 0x34
 8000f86:	89a3      	ldrh	r3, [r4, #12]
 8000f88:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000f8c:	81a3      	strh	r3, [r4, #12]
 8000f8e:	2300      	movs	r3, #0
 8000f90:	6063      	str	r3, [r4, #4]
 8000f92:	6923      	ldr	r3, [r4, #16]
 8000f94:	6023      	str	r3, [r4, #0]
 8000f96:	89a3      	ldrh	r3, [r4, #12]
 8000f98:	f043 0308 	orr.w	r3, r3, #8
 8000f9c:	81a3      	strh	r3, [r4, #12]
 8000f9e:	6923      	ldr	r3, [r4, #16]
 8000fa0:	b94b      	cbnz	r3, 8000fb6 <__swsetup_r+0x9a>
 8000fa2:	89a3      	ldrh	r3, [r4, #12]
 8000fa4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000fa8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000fac:	d003      	beq.n	8000fb6 <__swsetup_r+0x9a>
 8000fae:	4621      	mov	r1, r4
 8000fb0:	4630      	mov	r0, r6
 8000fb2:	f000 f929 	bl	8001208 <__smakebuf_r>
 8000fb6:	89a0      	ldrh	r0, [r4, #12]
 8000fb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000fbc:	f010 0301 	ands.w	r3, r0, #1
 8000fc0:	d00a      	beq.n	8000fd8 <__swsetup_r+0xbc>
 8000fc2:	2300      	movs	r3, #0
 8000fc4:	60a3      	str	r3, [r4, #8]
 8000fc6:	6963      	ldr	r3, [r4, #20]
 8000fc8:	425b      	negs	r3, r3
 8000fca:	61a3      	str	r3, [r4, #24]
 8000fcc:	6923      	ldr	r3, [r4, #16]
 8000fce:	b943      	cbnz	r3, 8000fe2 <__swsetup_r+0xc6>
 8000fd0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000fd4:	d1ba      	bne.n	8000f4c <__swsetup_r+0x30>
 8000fd6:	bd70      	pop	{r4, r5, r6, pc}
 8000fd8:	0781      	lsls	r1, r0, #30
 8000fda:	bf58      	it	pl
 8000fdc:	6963      	ldrpl	r3, [r4, #20]
 8000fde:	60a3      	str	r3, [r4, #8]
 8000fe0:	e7f4      	b.n	8000fcc <__swsetup_r+0xb0>
 8000fe2:	2000      	movs	r0, #0
 8000fe4:	e7f7      	b.n	8000fd6 <__swsetup_r+0xba>
 8000fe6:	bf00      	nop
 8000fe8:	2000002c 	.word	0x2000002c
 8000fec:	08001410 	.word	0x08001410
 8000ff0:	08001430 	.word	0x08001430
 8000ff4:	080013f0 	.word	0x080013f0

08000ff8 <_close_r>:
 8000ff8:	b538      	push	{r3, r4, r5, lr}
 8000ffa:	2300      	movs	r3, #0
 8000ffc:	4d05      	ldr	r5, [pc, #20]	; (8001014 <_close_r+0x1c>)
 8000ffe:	4604      	mov	r4, r0
 8001000:	4608      	mov	r0, r1
 8001002:	602b      	str	r3, [r5, #0]
 8001004:	f7ff f9b7 	bl	8000376 <_close>
 8001008:	1c43      	adds	r3, r0, #1
 800100a:	d102      	bne.n	8001012 <_close_r+0x1a>
 800100c:	682b      	ldr	r3, [r5, #0]
 800100e:	b103      	cbz	r3, 8001012 <_close_r+0x1a>
 8001010:	6023      	str	r3, [r4, #0]
 8001012:	bd38      	pop	{r3, r4, r5, pc}
 8001014:	200000c4 	.word	0x200000c4

08001018 <__sflush_r>:
 8001018:	898a      	ldrh	r2, [r1, #12]
 800101a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800101e:	4605      	mov	r5, r0
 8001020:	0710      	lsls	r0, r2, #28
 8001022:	460c      	mov	r4, r1
 8001024:	d458      	bmi.n	80010d8 <__sflush_r+0xc0>
 8001026:	684b      	ldr	r3, [r1, #4]
 8001028:	2b00      	cmp	r3, #0
 800102a:	dc05      	bgt.n	8001038 <__sflush_r+0x20>
 800102c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800102e:	2b00      	cmp	r3, #0
 8001030:	dc02      	bgt.n	8001038 <__sflush_r+0x20>
 8001032:	2000      	movs	r0, #0
 8001034:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001038:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800103a:	2e00      	cmp	r6, #0
 800103c:	d0f9      	beq.n	8001032 <__sflush_r+0x1a>
 800103e:	2300      	movs	r3, #0
 8001040:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001044:	682f      	ldr	r7, [r5, #0]
 8001046:	602b      	str	r3, [r5, #0]
 8001048:	d032      	beq.n	80010b0 <__sflush_r+0x98>
 800104a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800104c:	89a3      	ldrh	r3, [r4, #12]
 800104e:	075a      	lsls	r2, r3, #29
 8001050:	d505      	bpl.n	800105e <__sflush_r+0x46>
 8001052:	6863      	ldr	r3, [r4, #4]
 8001054:	1ac0      	subs	r0, r0, r3
 8001056:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001058:	b10b      	cbz	r3, 800105e <__sflush_r+0x46>
 800105a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800105c:	1ac0      	subs	r0, r0, r3
 800105e:	2300      	movs	r3, #0
 8001060:	4602      	mov	r2, r0
 8001062:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001064:	4628      	mov	r0, r5
 8001066:	6a21      	ldr	r1, [r4, #32]
 8001068:	47b0      	blx	r6
 800106a:	1c43      	adds	r3, r0, #1
 800106c:	89a3      	ldrh	r3, [r4, #12]
 800106e:	d106      	bne.n	800107e <__sflush_r+0x66>
 8001070:	6829      	ldr	r1, [r5, #0]
 8001072:	291d      	cmp	r1, #29
 8001074:	d82c      	bhi.n	80010d0 <__sflush_r+0xb8>
 8001076:	4a2a      	ldr	r2, [pc, #168]	; (8001120 <__sflush_r+0x108>)
 8001078:	40ca      	lsrs	r2, r1
 800107a:	07d6      	lsls	r6, r2, #31
 800107c:	d528      	bpl.n	80010d0 <__sflush_r+0xb8>
 800107e:	2200      	movs	r2, #0
 8001080:	6062      	str	r2, [r4, #4]
 8001082:	6922      	ldr	r2, [r4, #16]
 8001084:	04d9      	lsls	r1, r3, #19
 8001086:	6022      	str	r2, [r4, #0]
 8001088:	d504      	bpl.n	8001094 <__sflush_r+0x7c>
 800108a:	1c42      	adds	r2, r0, #1
 800108c:	d101      	bne.n	8001092 <__sflush_r+0x7a>
 800108e:	682b      	ldr	r3, [r5, #0]
 8001090:	b903      	cbnz	r3, 8001094 <__sflush_r+0x7c>
 8001092:	6560      	str	r0, [r4, #84]	; 0x54
 8001094:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001096:	602f      	str	r7, [r5, #0]
 8001098:	2900      	cmp	r1, #0
 800109a:	d0ca      	beq.n	8001032 <__sflush_r+0x1a>
 800109c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010a0:	4299      	cmp	r1, r3
 80010a2:	d002      	beq.n	80010aa <__sflush_r+0x92>
 80010a4:	4628      	mov	r0, r5
 80010a6:	f000 f909 	bl	80012bc <_free_r>
 80010aa:	2000      	movs	r0, #0
 80010ac:	6360      	str	r0, [r4, #52]	; 0x34
 80010ae:	e7c1      	b.n	8001034 <__sflush_r+0x1c>
 80010b0:	6a21      	ldr	r1, [r4, #32]
 80010b2:	2301      	movs	r3, #1
 80010b4:	4628      	mov	r0, r5
 80010b6:	47b0      	blx	r6
 80010b8:	1c41      	adds	r1, r0, #1
 80010ba:	d1c7      	bne.n	800104c <__sflush_r+0x34>
 80010bc:	682b      	ldr	r3, [r5, #0]
 80010be:	2b00      	cmp	r3, #0
 80010c0:	d0c4      	beq.n	800104c <__sflush_r+0x34>
 80010c2:	2b1d      	cmp	r3, #29
 80010c4:	d001      	beq.n	80010ca <__sflush_r+0xb2>
 80010c6:	2b16      	cmp	r3, #22
 80010c8:	d101      	bne.n	80010ce <__sflush_r+0xb6>
 80010ca:	602f      	str	r7, [r5, #0]
 80010cc:	e7b1      	b.n	8001032 <__sflush_r+0x1a>
 80010ce:	89a3      	ldrh	r3, [r4, #12]
 80010d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010d4:	81a3      	strh	r3, [r4, #12]
 80010d6:	e7ad      	b.n	8001034 <__sflush_r+0x1c>
 80010d8:	690f      	ldr	r7, [r1, #16]
 80010da:	2f00      	cmp	r7, #0
 80010dc:	d0a9      	beq.n	8001032 <__sflush_r+0x1a>
 80010de:	0793      	lsls	r3, r2, #30
 80010e0:	bf18      	it	ne
 80010e2:	2300      	movne	r3, #0
 80010e4:	680e      	ldr	r6, [r1, #0]
 80010e6:	bf08      	it	eq
 80010e8:	694b      	ldreq	r3, [r1, #20]
 80010ea:	eba6 0807 	sub.w	r8, r6, r7
 80010ee:	600f      	str	r7, [r1, #0]
 80010f0:	608b      	str	r3, [r1, #8]
 80010f2:	f1b8 0f00 	cmp.w	r8, #0
 80010f6:	dd9c      	ble.n	8001032 <__sflush_r+0x1a>
 80010f8:	4643      	mov	r3, r8
 80010fa:	463a      	mov	r2, r7
 80010fc:	4628      	mov	r0, r5
 80010fe:	6a21      	ldr	r1, [r4, #32]
 8001100:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001102:	47b0      	blx	r6
 8001104:	2800      	cmp	r0, #0
 8001106:	dc06      	bgt.n	8001116 <__sflush_r+0xfe>
 8001108:	89a3      	ldrh	r3, [r4, #12]
 800110a:	f04f 30ff 	mov.w	r0, #4294967295
 800110e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001112:	81a3      	strh	r3, [r4, #12]
 8001114:	e78e      	b.n	8001034 <__sflush_r+0x1c>
 8001116:	4407      	add	r7, r0
 8001118:	eba8 0800 	sub.w	r8, r8, r0
 800111c:	e7e9      	b.n	80010f2 <__sflush_r+0xda>
 800111e:	bf00      	nop
 8001120:	20400001 	.word	0x20400001

08001124 <_fflush_r>:
 8001124:	b538      	push	{r3, r4, r5, lr}
 8001126:	690b      	ldr	r3, [r1, #16]
 8001128:	4605      	mov	r5, r0
 800112a:	460c      	mov	r4, r1
 800112c:	b913      	cbnz	r3, 8001134 <_fflush_r+0x10>
 800112e:	2500      	movs	r5, #0
 8001130:	4628      	mov	r0, r5
 8001132:	bd38      	pop	{r3, r4, r5, pc}
 8001134:	b118      	cbz	r0, 800113e <_fflush_r+0x1a>
 8001136:	6983      	ldr	r3, [r0, #24]
 8001138:	b90b      	cbnz	r3, 800113e <_fflush_r+0x1a>
 800113a:	f7ff fa4f 	bl	80005dc <__sinit>
 800113e:	4b14      	ldr	r3, [pc, #80]	; (8001190 <_fflush_r+0x6c>)
 8001140:	429c      	cmp	r4, r3
 8001142:	d11b      	bne.n	800117c <_fflush_r+0x58>
 8001144:	686c      	ldr	r4, [r5, #4]
 8001146:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800114a:	2b00      	cmp	r3, #0
 800114c:	d0ef      	beq.n	800112e <_fflush_r+0xa>
 800114e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001150:	07d0      	lsls	r0, r2, #31
 8001152:	d404      	bmi.n	800115e <_fflush_r+0x3a>
 8001154:	0599      	lsls	r1, r3, #22
 8001156:	d402      	bmi.n	800115e <_fflush_r+0x3a>
 8001158:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800115a:	f7ff fadd 	bl	8000718 <__retarget_lock_acquire_recursive>
 800115e:	4628      	mov	r0, r5
 8001160:	4621      	mov	r1, r4
 8001162:	f7ff ff59 	bl	8001018 <__sflush_r>
 8001166:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001168:	4605      	mov	r5, r0
 800116a:	07da      	lsls	r2, r3, #31
 800116c:	d4e0      	bmi.n	8001130 <_fflush_r+0xc>
 800116e:	89a3      	ldrh	r3, [r4, #12]
 8001170:	059b      	lsls	r3, r3, #22
 8001172:	d4dd      	bmi.n	8001130 <_fflush_r+0xc>
 8001174:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001176:	f7ff fad0 	bl	800071a <__retarget_lock_release_recursive>
 800117a:	e7d9      	b.n	8001130 <_fflush_r+0xc>
 800117c:	4b05      	ldr	r3, [pc, #20]	; (8001194 <_fflush_r+0x70>)
 800117e:	429c      	cmp	r4, r3
 8001180:	d101      	bne.n	8001186 <_fflush_r+0x62>
 8001182:	68ac      	ldr	r4, [r5, #8]
 8001184:	e7df      	b.n	8001146 <_fflush_r+0x22>
 8001186:	4b04      	ldr	r3, [pc, #16]	; (8001198 <_fflush_r+0x74>)
 8001188:	429c      	cmp	r4, r3
 800118a:	bf08      	it	eq
 800118c:	68ec      	ldreq	r4, [r5, #12]
 800118e:	e7da      	b.n	8001146 <_fflush_r+0x22>
 8001190:	08001410 	.word	0x08001410
 8001194:	08001430 	.word	0x08001430
 8001198:	080013f0 	.word	0x080013f0

0800119c <_lseek_r>:
 800119c:	b538      	push	{r3, r4, r5, lr}
 800119e:	4604      	mov	r4, r0
 80011a0:	4608      	mov	r0, r1
 80011a2:	4611      	mov	r1, r2
 80011a4:	2200      	movs	r2, #0
 80011a6:	4d05      	ldr	r5, [pc, #20]	; (80011bc <_lseek_r+0x20>)
 80011a8:	602a      	str	r2, [r5, #0]
 80011aa:	461a      	mov	r2, r3
 80011ac:	f7ff f907 	bl	80003be <_lseek>
 80011b0:	1c43      	adds	r3, r0, #1
 80011b2:	d102      	bne.n	80011ba <_lseek_r+0x1e>
 80011b4:	682b      	ldr	r3, [r5, #0]
 80011b6:	b103      	cbz	r3, 80011ba <_lseek_r+0x1e>
 80011b8:	6023      	str	r3, [r4, #0]
 80011ba:	bd38      	pop	{r3, r4, r5, pc}
 80011bc:	200000c4 	.word	0x200000c4

080011c0 <__swhatbuf_r>:
 80011c0:	b570      	push	{r4, r5, r6, lr}
 80011c2:	460e      	mov	r6, r1
 80011c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011c8:	4614      	mov	r4, r2
 80011ca:	2900      	cmp	r1, #0
 80011cc:	461d      	mov	r5, r3
 80011ce:	b096      	sub	sp, #88	; 0x58
 80011d0:	da07      	bge.n	80011e2 <__swhatbuf_r+0x22>
 80011d2:	2300      	movs	r3, #0
 80011d4:	602b      	str	r3, [r5, #0]
 80011d6:	89b3      	ldrh	r3, [r6, #12]
 80011d8:	061a      	lsls	r2, r3, #24
 80011da:	d410      	bmi.n	80011fe <__swhatbuf_r+0x3e>
 80011dc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011e0:	e00e      	b.n	8001200 <__swhatbuf_r+0x40>
 80011e2:	466a      	mov	r2, sp
 80011e4:	f000 f8c8 	bl	8001378 <_fstat_r>
 80011e8:	2800      	cmp	r0, #0
 80011ea:	dbf2      	blt.n	80011d2 <__swhatbuf_r+0x12>
 80011ec:	9a01      	ldr	r2, [sp, #4]
 80011ee:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80011f2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80011f6:	425a      	negs	r2, r3
 80011f8:	415a      	adcs	r2, r3
 80011fa:	602a      	str	r2, [r5, #0]
 80011fc:	e7ee      	b.n	80011dc <__swhatbuf_r+0x1c>
 80011fe:	2340      	movs	r3, #64	; 0x40
 8001200:	2000      	movs	r0, #0
 8001202:	6023      	str	r3, [r4, #0]
 8001204:	b016      	add	sp, #88	; 0x58
 8001206:	bd70      	pop	{r4, r5, r6, pc}

08001208 <__smakebuf_r>:
 8001208:	898b      	ldrh	r3, [r1, #12]
 800120a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800120c:	079d      	lsls	r5, r3, #30
 800120e:	4606      	mov	r6, r0
 8001210:	460c      	mov	r4, r1
 8001212:	d507      	bpl.n	8001224 <__smakebuf_r+0x1c>
 8001214:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001218:	6023      	str	r3, [r4, #0]
 800121a:	6123      	str	r3, [r4, #16]
 800121c:	2301      	movs	r3, #1
 800121e:	6163      	str	r3, [r4, #20]
 8001220:	b002      	add	sp, #8
 8001222:	bd70      	pop	{r4, r5, r6, pc}
 8001224:	466a      	mov	r2, sp
 8001226:	ab01      	add	r3, sp, #4
 8001228:	f7ff ffca 	bl	80011c0 <__swhatbuf_r>
 800122c:	9900      	ldr	r1, [sp, #0]
 800122e:	4605      	mov	r5, r0
 8001230:	4630      	mov	r0, r6
 8001232:	f7ff fa73 	bl	800071c <_malloc_r>
 8001236:	b948      	cbnz	r0, 800124c <__smakebuf_r+0x44>
 8001238:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800123c:	059a      	lsls	r2, r3, #22
 800123e:	d4ef      	bmi.n	8001220 <__smakebuf_r+0x18>
 8001240:	f023 0303 	bic.w	r3, r3, #3
 8001244:	f043 0302 	orr.w	r3, r3, #2
 8001248:	81a3      	strh	r3, [r4, #12]
 800124a:	e7e3      	b.n	8001214 <__smakebuf_r+0xc>
 800124c:	4b0d      	ldr	r3, [pc, #52]	; (8001284 <__smakebuf_r+0x7c>)
 800124e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001250:	89a3      	ldrh	r3, [r4, #12]
 8001252:	6020      	str	r0, [r4, #0]
 8001254:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001258:	81a3      	strh	r3, [r4, #12]
 800125a:	9b00      	ldr	r3, [sp, #0]
 800125c:	6120      	str	r0, [r4, #16]
 800125e:	6163      	str	r3, [r4, #20]
 8001260:	9b01      	ldr	r3, [sp, #4]
 8001262:	b15b      	cbz	r3, 800127c <__smakebuf_r+0x74>
 8001264:	4630      	mov	r0, r6
 8001266:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800126a:	f000 f897 	bl	800139c <_isatty_r>
 800126e:	b128      	cbz	r0, 800127c <__smakebuf_r+0x74>
 8001270:	89a3      	ldrh	r3, [r4, #12]
 8001272:	f023 0303 	bic.w	r3, r3, #3
 8001276:	f043 0301 	orr.w	r3, r3, #1
 800127a:	81a3      	strh	r3, [r4, #12]
 800127c:	89a0      	ldrh	r0, [r4, #12]
 800127e:	4305      	orrs	r5, r0
 8001280:	81a5      	strh	r5, [r4, #12]
 8001282:	e7cd      	b.n	8001220 <__smakebuf_r+0x18>
 8001284:	08000575 	.word	0x08000575

08001288 <memchr>:
 8001288:	4603      	mov	r3, r0
 800128a:	b510      	push	{r4, lr}
 800128c:	b2c9      	uxtb	r1, r1
 800128e:	4402      	add	r2, r0
 8001290:	4293      	cmp	r3, r2
 8001292:	4618      	mov	r0, r3
 8001294:	d101      	bne.n	800129a <memchr+0x12>
 8001296:	2000      	movs	r0, #0
 8001298:	e003      	b.n	80012a2 <memchr+0x1a>
 800129a:	7804      	ldrb	r4, [r0, #0]
 800129c:	3301      	adds	r3, #1
 800129e:	428c      	cmp	r4, r1
 80012a0:	d1f6      	bne.n	8001290 <memchr+0x8>
 80012a2:	bd10      	pop	{r4, pc}

080012a4 <__malloc_lock>:
 80012a4:	4801      	ldr	r0, [pc, #4]	; (80012ac <__malloc_lock+0x8>)
 80012a6:	f7ff ba37 	b.w	8000718 <__retarget_lock_acquire_recursive>
 80012aa:	bf00      	nop
 80012ac:	200000bc 	.word	0x200000bc

080012b0 <__malloc_unlock>:
 80012b0:	4801      	ldr	r0, [pc, #4]	; (80012b8 <__malloc_unlock+0x8>)
 80012b2:	f7ff ba32 	b.w	800071a <__retarget_lock_release_recursive>
 80012b6:	bf00      	nop
 80012b8:	200000bc 	.word	0x200000bc

080012bc <_free_r>:
 80012bc:	b538      	push	{r3, r4, r5, lr}
 80012be:	4605      	mov	r5, r0
 80012c0:	2900      	cmp	r1, #0
 80012c2:	d043      	beq.n	800134c <_free_r+0x90>
 80012c4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80012c8:	1f0c      	subs	r4, r1, #4
 80012ca:	2b00      	cmp	r3, #0
 80012cc:	bfb8      	it	lt
 80012ce:	18e4      	addlt	r4, r4, r3
 80012d0:	f7ff ffe8 	bl	80012a4 <__malloc_lock>
 80012d4:	4a1e      	ldr	r2, [pc, #120]	; (8001350 <_free_r+0x94>)
 80012d6:	6813      	ldr	r3, [r2, #0]
 80012d8:	4610      	mov	r0, r2
 80012da:	b933      	cbnz	r3, 80012ea <_free_r+0x2e>
 80012dc:	6063      	str	r3, [r4, #4]
 80012de:	6014      	str	r4, [r2, #0]
 80012e0:	4628      	mov	r0, r5
 80012e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80012e6:	f7ff bfe3 	b.w	80012b0 <__malloc_unlock>
 80012ea:	42a3      	cmp	r3, r4
 80012ec:	d90a      	bls.n	8001304 <_free_r+0x48>
 80012ee:	6821      	ldr	r1, [r4, #0]
 80012f0:	1862      	adds	r2, r4, r1
 80012f2:	4293      	cmp	r3, r2
 80012f4:	bf01      	itttt	eq
 80012f6:	681a      	ldreq	r2, [r3, #0]
 80012f8:	685b      	ldreq	r3, [r3, #4]
 80012fa:	1852      	addeq	r2, r2, r1
 80012fc:	6022      	streq	r2, [r4, #0]
 80012fe:	6063      	str	r3, [r4, #4]
 8001300:	6004      	str	r4, [r0, #0]
 8001302:	e7ed      	b.n	80012e0 <_free_r+0x24>
 8001304:	461a      	mov	r2, r3
 8001306:	685b      	ldr	r3, [r3, #4]
 8001308:	b10b      	cbz	r3, 800130e <_free_r+0x52>
 800130a:	42a3      	cmp	r3, r4
 800130c:	d9fa      	bls.n	8001304 <_free_r+0x48>
 800130e:	6811      	ldr	r1, [r2, #0]
 8001310:	1850      	adds	r0, r2, r1
 8001312:	42a0      	cmp	r0, r4
 8001314:	d10b      	bne.n	800132e <_free_r+0x72>
 8001316:	6820      	ldr	r0, [r4, #0]
 8001318:	4401      	add	r1, r0
 800131a:	1850      	adds	r0, r2, r1
 800131c:	4283      	cmp	r3, r0
 800131e:	6011      	str	r1, [r2, #0]
 8001320:	d1de      	bne.n	80012e0 <_free_r+0x24>
 8001322:	6818      	ldr	r0, [r3, #0]
 8001324:	685b      	ldr	r3, [r3, #4]
 8001326:	4401      	add	r1, r0
 8001328:	6011      	str	r1, [r2, #0]
 800132a:	6053      	str	r3, [r2, #4]
 800132c:	e7d8      	b.n	80012e0 <_free_r+0x24>
 800132e:	d902      	bls.n	8001336 <_free_r+0x7a>
 8001330:	230c      	movs	r3, #12
 8001332:	602b      	str	r3, [r5, #0]
 8001334:	e7d4      	b.n	80012e0 <_free_r+0x24>
 8001336:	6820      	ldr	r0, [r4, #0]
 8001338:	1821      	adds	r1, r4, r0
 800133a:	428b      	cmp	r3, r1
 800133c:	bf01      	itttt	eq
 800133e:	6819      	ldreq	r1, [r3, #0]
 8001340:	685b      	ldreq	r3, [r3, #4]
 8001342:	1809      	addeq	r1, r1, r0
 8001344:	6021      	streq	r1, [r4, #0]
 8001346:	6063      	str	r3, [r4, #4]
 8001348:	6054      	str	r4, [r2, #4]
 800134a:	e7c9      	b.n	80012e0 <_free_r+0x24>
 800134c:	bd38      	pop	{r3, r4, r5, pc}
 800134e:	bf00      	nop
 8001350:	200000b0 	.word	0x200000b0

08001354 <_read_r>:
 8001354:	b538      	push	{r3, r4, r5, lr}
 8001356:	4604      	mov	r4, r0
 8001358:	4608      	mov	r0, r1
 800135a:	4611      	mov	r1, r2
 800135c:	2200      	movs	r2, #0
 800135e:	4d05      	ldr	r5, [pc, #20]	; (8001374 <_read_r+0x20>)
 8001360:	602a      	str	r2, [r5, #0]
 8001362:	461a      	mov	r2, r3
 8001364:	f7fe ffce 	bl	8000304 <_read>
 8001368:	1c43      	adds	r3, r0, #1
 800136a:	d102      	bne.n	8001372 <_read_r+0x1e>
 800136c:	682b      	ldr	r3, [r5, #0]
 800136e:	b103      	cbz	r3, 8001372 <_read_r+0x1e>
 8001370:	6023      	str	r3, [r4, #0]
 8001372:	bd38      	pop	{r3, r4, r5, pc}
 8001374:	200000c4 	.word	0x200000c4

08001378 <_fstat_r>:
 8001378:	b538      	push	{r3, r4, r5, lr}
 800137a:	2300      	movs	r3, #0
 800137c:	4d06      	ldr	r5, [pc, #24]	; (8001398 <_fstat_r+0x20>)
 800137e:	4604      	mov	r4, r0
 8001380:	4608      	mov	r0, r1
 8001382:	4611      	mov	r1, r2
 8001384:	602b      	str	r3, [r5, #0]
 8001386:	f7ff f801 	bl	800038c <_fstat>
 800138a:	1c43      	adds	r3, r0, #1
 800138c:	d102      	bne.n	8001394 <_fstat_r+0x1c>
 800138e:	682b      	ldr	r3, [r5, #0]
 8001390:	b103      	cbz	r3, 8001394 <_fstat_r+0x1c>
 8001392:	6023      	str	r3, [r4, #0]
 8001394:	bd38      	pop	{r3, r4, r5, pc}
 8001396:	bf00      	nop
 8001398:	200000c4 	.word	0x200000c4

0800139c <_isatty_r>:
 800139c:	b538      	push	{r3, r4, r5, lr}
 800139e:	2300      	movs	r3, #0
 80013a0:	4d05      	ldr	r5, [pc, #20]	; (80013b8 <_isatty_r+0x1c>)
 80013a2:	4604      	mov	r4, r0
 80013a4:	4608      	mov	r0, r1
 80013a6:	602b      	str	r3, [r5, #0]
 80013a8:	f7fe ffff 	bl	80003aa <_isatty>
 80013ac:	1c43      	adds	r3, r0, #1
 80013ae:	d102      	bne.n	80013b6 <_isatty_r+0x1a>
 80013b0:	682b      	ldr	r3, [r5, #0]
 80013b2:	b103      	cbz	r3, 80013b6 <_isatty_r+0x1a>
 80013b4:	6023      	str	r3, [r4, #0]
 80013b6:	bd38      	pop	{r3, r4, r5, pc}
 80013b8:	200000c4 	.word	0x200000c4

080013bc <_init>:
 80013bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013be:	bf00      	nop
 80013c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013c2:	bc08      	pop	{r3}
 80013c4:	469e      	mov	lr, r3
 80013c6:	4770      	bx	lr

080013c8 <_fini>:
 80013c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ca:	bf00      	nop
 80013cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013ce:	bc08      	pop	{r3}
 80013d0:	469e      	mov	lr, r3
 80013d2:	4770      	bx	lr
