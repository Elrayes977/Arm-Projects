/*
 * MNVIC_prg.c
 *
 *  Created on: Jul 19, 2023
 *      Author: Elrayes
 */


#include "STD_TYPES.h"
#include "BIT_MATH.h"
#include "STM32F103C8.h"

#include "MNVIC_priv.h"
#include "MNVIC_config.h"
#include "MNVIC_int.h"


ErrorState_t MNVIC_u8EnableInterrupt(u8 Copy_u8IRQNumber)
{
	ErrorState_t Local_enState=SUCCES;
	if(Copy_u8IRQNumber<31)
	{	//Atomic Acssess change only the bit
		NVIC_REG->NVIC_ISER[0]=(1<<Copy_u8IRQNumber);
	}
	else if(Copy_u8IRQNumber<63)
	{	//Atomic Acssess change only the bit
		Copy_u8IRQNumber=Copy_u8IRQNumber-32;
		NVIC_REG->NVIC_ISER[1]=(1<<Copy_u8IRQNumber);
	}
	else if(Copy_u8IRQNumber<81)
	{	//Atomic Acssess change only the bit
		Copy_u8IRQNumber=Copy_u8IRQNumber-64;
		NVIC_REG->NVIC_ISER[2]=(1<<Copy_u8IRQNumber);
	}
	else
	{
		Local_enState=OUT_OF_RANGE;

	}
	return Local_enState;
}
ErrorState_t MNVIC_u8DisableInterrupt(u8 Copy_u8IRQNumber);
ErrorState_t MNVIC_u8SetPendingFlag(u8 Copy_u8IRQNumber);
ErrorState_t MNVIC_u8ClearPendingFlag(u8 Copy_u8IRQNumber);
ErrorState_t MNVIC_u8GetActiveFlag(u8 Copy_u8IRQNumber,u8 *ptrResult);
