/*
 *
	*****************************
	Author:Abdelrahman Elrayes
	Origin Date:25/7/2023
	Version: 1.0.0
	SWC:STK

	*****************************
 */
#include "STD_TYPES.h"
#include "BIT_MATH.h"
#include "ERROR_STATES.h"
#include "STM32F103C8.h"
/***********STK*************/
#include "MSTK_priv.h"
#include "MSTK_config.h"
#include "MSTK_int.h"

void (*CallBackFun)(void)={NULL};


ErrorState_t MSTK_enInit(void)
{
#if CLOCK_MODE==AHB_OVER_8_MODE

	//SET_BIT(STK_REG->STK_CTRL,ENABLE_BIT);
	CLR_BIT(STK_REG->STK_CTRL,CLKSOURCE_BIT);

#elif	CLOCK_MODE==AHB_MODE
	//SET_BIT(STK_REG->STK_CTRL,ENABLE_BIT);
	SET_BIT(STK_REG->STK_CTRL,CLKSOURCE_BIT);

#else
 #error("Wrong AHB MODE")
#endif

}
ErrorState_t MSTK_enSetBusyWait(u16 copy_u8Ticks)
{
	u8 Local_Ticksin_ms=copy_u8Ticks*1000;
	STK_REG
	//enable Timer
	SET_BIT(STK_REG->STK_CTRL,ENABLE_BIT);//Enable bit
	STK_REG->STK_LOAD=Local_Ticksin_ms;
	while(!GET_BIT(STK_REG->STK_CTRL,COUNTFLAG));
	//disable Timer
	CLR_BIT(STK_REG->STK_CTRL,ENABLE_BIT);
}
ErrorState_t MSTK_enSetInterValSingle(u8 copy_u8Time, void (*ptrfn)(void))
{




}
ErrorState_t MSTK_enSetInterValPeriodic(u8 copy_u8Time, void (*ptrfn)(void))
{


}
ErrorState_t MSTK_enStopTimer()
{


}
ErrorState_t MSTK_enGetElapsedTime()
{


}
ErrorState_t MSTK_enGetRemainingTime()
{


}

